{"version":3,"file":"components-atoms-Input-stories.4126ac47.iframe.bundle.js","mappings":";;AAeA;AACA;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;;;AAMA;;;;AAMA","sources":["webpack://lg-prototype/./src/components/atoms/Input.tsx"],"sourcesContent":["import React from 'react';\nimport { Input as AntInput } from 'antd';\nimport { InputProps as AntInputProps } from 'antd/lib/input';\nimport styled from 'styled-components';\n\nexport interface InputProps extends AntInputProps {\n  label?: string;\n  error?: string;\n  helperText?: string;\n  fullWidthMobile?: boolean;\n}\n\n// Styled container for the input component\nconst InputContainer = styled.div<{ fullWidthMobile?: boolean }>`\n  margin-bottom: 16px;\n  width: ${props => props.fullWidthMobile ? '100%' : 'auto'};\n`;\n\nconst LabelContainer = styled.div`\n  margin-bottom: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #333;\n`;\n\nconst StyledInput = styled(AntInput)`\n  // Default styling\n  border-radius: 4px;\n  \n  // Size adjustments for mobile\n  &.ant-input-lg {\n    font-size: 16px;\n    padding: 10px 12px;\n    height: 44px;\n  }\n  \n  &.ant-input {\n    font-size: 14px;\n    padding: 8px 12px;\n    height: 36px;\n  }\n  \n  &.ant-input-sm {\n    font-size: 12px;\n    padding: 4px 8px;\n    height: 28px;\n  }\n  \n  // Focus state\n  &:focus, &:hover {\n    border-color: #1890ff;\n  }\n  \n  // Error state\n  &.ant-input-status-error {\n    border-color: #ff4d4f;\n  }\n`;\n\nconst ErrorText = styled.div`\n  color: #ff4d4f;\n  font-size: 12px;\n  margin-top: 4px;\n`;\n\nconst HelperText = styled.div`\n  color: #999;\n  font-size: 12px;\n  margin-top: 4px;\n`;\n\nconst Input: React.FC<InputProps> = ({ \n  label, \n  error, \n  helperText,\n  fullWidthMobile = false,\n  ...props \n}) => {\n  return (\n    <InputContainer fullWidthMobile={fullWidthMobile}>\n      {label && (\n        <LabelContainer>\n          <label>{label}{props.required && <span style={{ color: '#ff4d4f' }}> *</span>}</label>\n        </LabelContainer>\n      )}\n      <StyledInput {...props} status={error ? 'error' : ''} />\n      {error && <ErrorText>{error}</ErrorText>}\n      {helperText && !error && <HelperText>{helperText}</HelperText>}\n    </InputContainer>\n  );\n};\n\nexport default Input;\n"],"names":[],"sourceRoot":""}