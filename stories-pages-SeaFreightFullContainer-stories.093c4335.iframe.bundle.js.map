{"version":3,"file":"stories-pages-SeaFreightFullContainer-stories.093c4335.iframe.bundle.js","mappings":";;;;;;AAcA;AACA;;;;;;AAQA;;;AAGA;;AAIA;;;;AAIA;;AAEA;;;AAKA;;;;AAIA;;;AAGA;;;AAKA;;;;;;AAMA;;;AAKA;;;;AAIA;;;;;;AAMA;AChEA;;;AAkDA;;;;;;AAvCA;AACA;;;;;;AAQA;;;AAGA;;AAIA;;;;AAIA;;;;;AAKA;;;;;;;AAOA;;;;;;;AAOA;;AAIA;;AAEA;AAGA;;;;AAIA;AACA;;;;;AAKA;;;;AAIA;;AAIA;;;AAGA;AACA;AACA;;;;AAIA;AACA;;;AAGA;;;;;AAOA;AACA;;;;;;;;;;;AAWA;;AAIA;AACA;;;AAGA;;AAEA;;AAIA;;;;;;;;;AASA;AAGA;AACA;AACA;AACA;;;AAKA;AACA;AACA;;;;;AAOA;;AAEA;;AAEA;;;;;;AAMA;;AAEA;ACpKA;;;AAkDA;;;;;;AAvCA;AACA;;;;;;AAQA;;;AAGA;;AAIA;;;;AAIA;;;;;AAKA;;;;;;;AAOA;;;;;;;AAOA;;AAIA;;AAEA;AAGA;AACA;AACA;AACA;;;;;AAKA;AACA;;AAEA;;;AAKA;;;;AAIA;;;;AAIA;;;AAGA;;AAIA;AACA;AACA;;;;;AAKA;AACA;;AAEA;;;;;AAOA;;AAEA;;AAEA;;;;;;AAMA;;AAEA;;AAIA;;;;;AAKA;;;;;AAKA;;AAEA;;;;;;;AAOA;;;;;;AAMA;;AAEA;;;;;AAKA;;;AAGA;AC/JA;;;AAGA;;AAIA;AACA;AAGA;;;;AAIA;AACA;;;;;AAKA;;;;AAIA;;AAIA;;;AAGA;AACA;AACA;;;;AAIA;AACA;;;AAGA;;;;;AAOA;AACA;;;;;;;;;;;AAWA;;;;;AAOA;;AAEA;;AAEA;;;;;;AAMA;;AAEA;AC/EA;;;AAGA;;AAIA;AACA;;;AAKA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;;;;AAMA;AACA;;;;;;;AAOA;;;;;AAKA;;;;AAIA;;AAEA;;AAIA;;AAEA;;AAEA;;;AAKA;AACA;AACA;;AAIA;AACA;;;;;AAKA;;AAEA;AC5EA;;;AAGA;;AAIA;;AAEA;;;AAKA;AACA;;AAEA;;;AAGA;;AAEA;AAGA;;;;;AAKA;;;AAGA;;;;;;AAMA;;;;;;;AAOA;AACA;;AAEA;;AAIA;AACA;;;;;;AAQA;;AAEA;;AAIA;;;;;;;;;AASA;;;;;AAOA;;;AAGA;;;;;;AAMA;;AAEA;AC9FA;;;AAGA;;AAIA;;AAEA;;;AAKA;AACA;;AAEA;;;AAGA;;AAEA;AAGA;;;;;AAKA;AACA;;;;;;;AAOA;AACA;;;;;;;;AAQA;;;;AAIA;;AAIA;AACA;;AAEA;;;;;;AAMA;;;;AAMA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;;AAKA;AACA;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;;;;AAMA;;;AAKA;;;;AAIA;;AAEA;;;;;;;AASA;;AAEA;;;;AAMA;AACA;;;;AAIA;;;;;AAKA;;AAIA;;AAEA;AAYA;AAYA;;;;;AAOA;;;;;AAKA;AACA;;;;;;AAMA;;;;;;AAMA;;;;;AAKA;AACA;;AAEA;;;;;AC5MA;;;AAGA;;;;AAMA;;;;;;;ACNA;;;;;AAKA;;;;;AAKA;;AAEA;;;;;;;;ACTA;AACA;AACA;;;AAKA;AACA;;;;;AAKA;;;;;AAOA;;;;;;;AAOA;;;;;;AAMA;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;;;AAMA;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;ACzFA;;AAEA;;;AAKA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;;;AAGA;;;;AA0CA;;;ACrEA;AACA;;;;;;;;;;;;;;;AAiBA;AAGA;;AAEA;ACfA;;;AAGA;;AAIA;;AAEA;;;AAKA;AACA;;AAEA;;;AAGA;;AAEA;;AAIA;AACA;AAwCA;;;;AAjCA;AACA;;;;;AAKA;;;;AAIA;;;AAGA;AAGA;;;AAGA;AACA;;;AAKA;;;;;;AAMA;;AAEA;;AAIA;AACA;AAwPA;AApPA;;;;;AAKA;;AAEA;;AAIA;AACA;;;;;;;;AAUA;;AAIA;;;;;;AAMA;;;AAGA;;;;;AAKA;;;AAGA;;;;;;;;;;;;AAYA;;;;;AAKA;AACA;;;AAGA;AAGA;;;AAGA;AACA;AACA;;;AAKA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;AAKA;;;;;;;;;;;;AAYA;;AAEA;;;;;;;;AAQA;;;;AAIA;;;;;;AAMA;;;;AAIA;;;AAKA;AACA;AACA;;;;AAIA;;;;;;;AAOA;;;;;;AAMA;;;;;;;AAOA;;AAEA;;;;;;AAMA;;;;;AAKA;AACA;;;;AAIA;;;;;;AAMA;;;;;;AAMA;;;;AAIA;;;AAKA;;;;;;;;;;;AAWA;;;;;;AAMA;;AAIA;AACA;;;;;;AAMA;AACA;AACA;;;;;AAKA;;;;;;AAMA;AACA;;;;;AAKA;AACA;;;;;;;;;AASA;;;AAGA;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;;;;;;;;;;AAWA;;;;AAIA;;;;;;AAMA;;AAEA;;;AAGA;;;;;;;AAOA;;AAEA;AAGA;;;;AAIA;AACA;;;AAKA;;AAEA;;;AAGA;;AAEA;;;AAKA;AAiLA;;;AA3KA;AACA;AACA;;;;;AAKA;AACA;;;;;;AAMA;;;;;AAKA;;;AAGA;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;;;;;AAKA;AACA;;;;;AAKA;AACA;;;;;;;;;;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;;;;;;AAMA;;;;;AAKA;;;AAKA;AACA;AACA;;;;;AAKA;AACA;;;;;;AAMA;;;;;AAKA;;;AAGA;;;;;AAKA;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;AAiBA;;;;;AAOA;;;AAGA;;AAIA;;;;;AAKA;AACA;;;;;;;AAOA;;;;;;AAMA;;;;;AAKA;;;;;AAKA;;;;;;;;;;AAUA;;;AAGA;;AAIA;;;;;AAKA;;;AAGA;;AAIA;AACA;;;AAGA;AACA;;;;;;AAMA;;;;;AAKA;;AAEA;;;AAKA;AACA;AAGA;AACA;;;;AAIA;;;;AAIA;;;;;;;AAOA;;;;;AAKA;;;;;;AAMA;;AAEA;;;;AAIA;;;;;;;AAOA;;;;;AAKA;;;;AAIA;;;;;AAKA;;;;;;;;;AASA;;;;;;;;;;AAUA;;;;;AAKA;;;;;;;;;;;;;AAaA;;;;;;;AA66BA;;;;;;ACptDA","sources":["webpack://lg-prototype/./src/components/layout/GlobalHeader.tsx","webpack://lg-prototype/./src/pages/CargoDetails.tsx","webpack://lg-prototype/./src/pages/OrderSummary.tsx","webpack://lg-prototype/./src/pages/ShippingRoute.tsx","webpack://lg-prototype/./src/pages/BookingSuccess.tsx","webpack://lg-prototype/./src/pages/CargoInput.tsx","webpack://lg-prototype/./src/pages/SpecialHandling.tsx","webpack://lg-prototype/./src/components/atoms/CameraPreview.tsx","webpack://lg-prototype/./src/components/atoms/IconButton.tsx","webpack://lg-prototype/./src/components/molecules/CameraControls.tsx","webpack://lg-prototype/./src/components/organisms/CameraDropzone.tsx","webpack://lg-prototype/./src/components/molecules/FileUploadItem.tsx","webpack://lg-prototype/./src/pages/BookingDetails.tsx","webpack://lg-prototype/"],"sourcesContent":["import React from 'react';\nimport { Typography, Button } from 'antd';\nimport { LeftOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { colors, spacing } from '../../styles/theme';\n\nconst { Title } = Typography;\n\nconst HeaderContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 100;\n  background: ${colors.background.default};\n`;\n\nconst StatusBar = styled.div`\n  height: 24px;\n  background: #333333;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 ${spacing.md};\n  font-size: 12px;\n  color: white;\n`;\n\nconst Header = styled.div`\n  height: 52px;\n  padding: ${spacing.sm} ${spacing.md};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${colors.border.light};\n  background: white;\n`;\n\nconst LeftSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.sm};\n\n  .back-button {\n    font-size: 20px;\n    color: ${colors.text.primary};\n    cursor: pointer;\n  }\n`;\n\nconst CenterSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.sm};\n\n  .logo {\n    height: 24px;\n    width: auto;\n  }\n`;\n\nconst RightSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.sm};\n\n  .language-select {\n    font-size: 14px;\n    color: ${colors.text.primary};\n    cursor: pointer;\n    border: none;\n    background: none;\n    padding: 0;\n  }\n`;\n\ninterface GlobalHeaderProps {\n  title?: string;\n  onBack?: () => void;\n}\n\nconst GlobalHeader: React.FC<GlobalHeaderProps> = ({ title, onBack }) => {\n  return (\n    <HeaderContainer>\n      <StatusBar>\n        <span>12:09</span>\n        <div style={{ display: 'flex', gap: '4px', alignItems: 'center' }}>\n          <span>􀙇</span>\n          <span>􀙈</span>\n          <span>24%</span>\n        </div>\n      </StatusBar>\n      <Header>\n        <LeftSection>\n          {onBack && <LeftOutlined className=\"back-button\" onClick={onBack} />}\n        </LeftSection>\n        <CenterSection>\n          <img src=\"/logo.svg\" alt=\"Logo\" className=\"logo\" />\n        </CenterSection>\n        <RightSection>\n          <button className=\"language-select\">中 (簡)</button>\n        </RightSection>\n      </Header>\n    </HeaderContainer>\n  );\n};\n\nexport default GlobalHeader; ","import React, { useState } from 'react';\nimport { Layout, Radio, Select, Input, Checkbox, Button, Typography } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { colors, spacing, borderRadius, shadows } from '../styles/theme';\nimport GlobalHeader from '../components/layout/GlobalHeader';\n\nconst { Title } = Typography;\n\nconst StyledLayout = styled(Layout)`\n  background: ${colors.background.default};\n  min-height: 100vh;\n  width: 100%;\n`;\n\nconst HeaderContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 100;\n  background: ${colors.background.default};\n`;\n\nconst StatusBar = styled.div`\n  height: 24px;\n  background: #333333;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 ${spacing.md};\n  font-size: 12px;\n  color: white;\n`;\n\nconst Header = styled.div`\n  height: 52px;\n  padding: ${spacing.sm} ${spacing.md};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${colors.border.light};\n  background: white;\n\n  .back-button {\n    font-size: 20px;\n    color: ${colors.text.primary};\n    cursor: pointer;\n  }\n\n  .title {\n    font-size: 16px;\n    font-weight: 500;\n    color: ${colors.text.primary};\n    margin: 0;\n  }\n\n  .right-space {\n    width: 20px;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  margin-top: 76px;\n  padding: ${spacing.md};\n  padding-bottom: 120px;\n`;\n\nconst FormGroup = styled.div<{ noMargin?: boolean }>`\n  margin-bottom: ${props => props.noMargin ? '0' : spacing.lg};\n\n  .label {\n    font-size: 14px;\n    color: ${colors.text.primary};\n    margin-bottom: ${spacing.sm};\n    display: flex;\n    align-items: center;\n\n    .required {\n      color: ${colors.status.error};\n      margin-right: 4px;\n    }\n  }\n`;\n\nconst StyledRadioGroup = styled(Radio.Group)`\n  display: flex;\n  gap: ${spacing.sm};\n\n  .ant-radio-wrapper {\n    border: 1px solid ${colors.border.light};\n    padding: ${spacing.sm} ${spacing.md};\n    border-radius: ${borderRadius.medium};\n    margin-right: 0;\n\n    &-checked {\n      border-color: ${colors.primary};\n      background: ${colors.background.blue};\n    }\n  }\n`;\n\nconst StyledSelect = styled(Select)`\n  width: 100%;\n\n  .ant-select-selector {\n    height: 44px !important;\n    padding: ${spacing.sm} ${spacing.md} !important;\n    border-radius: ${borderRadius.medium} !important;\n\n    .ant-select-selection-search-input {\n      height: 42px !important;\n    }\n\n    .ant-select-selection-placeholder,\n    .ant-select-selection-item {\n      line-height: 28px !important;\n    }\n  }\n`;\n\nconst StyledInput = styled(Input)`\n  height: 44px;\n  border-radius: ${borderRadius.medium};\n  padding: ${spacing.sm} ${spacing.md};\n\n  &::placeholder {\n    color: ${colors.text.light};\n  }\n`;\n\nconst CurrencyInput = styled.div`\n  display: flex;\n  gap: ${spacing.sm};\n\n  .currency-select {\n    width: 100px;\n  }\n\n  .value-input {\n    flex: 1;\n  }\n`;\n\nconst AddressSection = styled.div`\n  margin-top: ${spacing.xl};\n  padding-top: ${spacing.lg};\n  border-top: 1px solid ${colors.border.light};\n`;\n\nconst AddButton = styled(Button)`\n  width: 100%;\n  height: 44px;\n  margin-top: ${spacing.md};\n  border-radius: ${borderRadius.medium};\n`;\n\nconst BottomButtons = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: ${spacing.md};\n  background: white;\n  box-shadow: ${shadows.medium};\n  display: flex;\n  gap: ${spacing.md};\n\n  .ant-btn {\n    flex: 1;\n    height: 44px;\n    font-size: 16px;\n    border-radius: ${borderRadius.medium};\n  }\n`;\n\ninterface CargoDetailsProps {\n  onBack?: () => void;\n  onNext?: (values: any) => void;\n}\n\nconst CargoDetails: React.FC<CargoDetailsProps> = ({ onBack, onNext }) => {\n  const [containerType, setContainerType] = useState<'whole' | 'part'>('whole');\n  const [cargoType, setCargoType] = useState<string>();\n  const [cargoWeight, setCargoWeight] = useState<string>();\n  const [cargoDimensions, setCargoDimensions] = useState<string>();\n  const [totalQuantity, setTotalQuantity] = useState<string>();\n  const [totalValue, setTotalValue] = useState<string>();\n  const [currency, setCurrency] = useState<string>('AUD');\n  const [needsWarehouse, setNeedsWarehouse] = useState<boolean>(false);\n  const [warehouseAddress, setWarehouseAddress] = useState<string>();\n  const [contactName, setContactName] = useState<string>();\n  const [contactPhone, setContactPhone] = useState<string>();\n  const [phonePrefix, setPhonePrefix] = useState<string>('+86');\n\n  const handleNext = () => {\n    onNext?.({\n      containerType,\n      cargoType,\n      cargoWeight,\n      cargoDimensions,\n      totalQuantity,\n      totalValue,\n      currency,\n      needsWarehouse,\n      warehouseAddress,\n      contactName,\n      contactPhone,\n      phonePrefix,\n    });\n  };\n\n  return (\n    <StyledLayout>\n      <GlobalHeader title=\"新增委托\" onBack={onBack} />\n\n      <ContentContainer>\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>整柜/拼柜</span>\n          </div>\n          <StyledRadioGroup \n            value={containerType}\n            onChange={e => setContainerType(e.target.value)}\n          >\n            <Radio value=\"whole\">整柜</Radio>\n            <Radio value=\"part\">拼柜</Radio>\n          </StyledRadioGroup>\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>柜型选择</span>\n          </div>\n          <StyledSelect\n            value={cargoType}\n            onChange={(value) => setCargoType(value as string)}\n            placeholder=\"请选择\"\n          >\n            <Select.Option value=\"type1\">20尺标准柜</Select.Option>\n            <Select.Option value=\"type2\">40尺标准柜</Select.Option>\n            <Select.Option value=\"type3\">40尺高柜</Select.Option>\n          </StyledSelect>\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>货物类型</span>\n          </div>\n          <StyledSelect\n            value={cargoType}\n            onChange={(value) => setCargoType(value as string)}\n            placeholder=\"请选择\"\n          >\n            <Select.Option value=\"type1\">普通货物</Select.Option>\n            <Select.Option value=\"type2\">危险品</Select.Option>\n            <Select.Option value=\"type3\">冷藏货物</Select.Option>\n          </StyledSelect>\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>货物总重量(kg)</span>\n          </div>\n          <StyledInput\n            value={cargoWeight}\n            onChange={e => setCargoWeight(e.target.value)}\n            placeholder=\"货物总重量\"\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>货物总尺寸(cbm)</span>\n          </div>\n          <StyledInput\n            value={cargoDimensions}\n            onChange={e => setCargoDimensions(e.target.value)}\n            placeholder=\"货物总尺寸\"\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">总箱数</div>\n          <StyledInput\n            value={totalQuantity}\n            onChange={e => setTotalQuantity(e.target.value)}\n            placeholder=\"总箱数\"\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">总货值</div>\n          <CurrencyInput>\n            <StyledSelect\n              className=\"currency-select\"\n              value={currency}\n              onChange={(value) => setCurrency(value as string)}\n            >\n              <Select.Option value=\"AUD\">AUD</Select.Option>\n              <Select.Option value=\"USD\">USD</Select.Option>\n              <Select.Option value=\"CNY\">CNY</Select.Option>\n            </StyledSelect>\n            <StyledInput\n              className=\"value-input\"\n              value={totalValue}\n              onChange={e => setTotalValue(e.target.value)}\n              placeholder=\"总货值\"\n            />\n          </CurrencyInput>\n        </FormGroup>\n\n        <FormGroup noMargin>\n          <Checkbox\n            checked={needsWarehouse}\n            onChange={e => setNeedsWarehouse(e.target.checked)}\n          >\n            上门装柜(可选填)\n          </Checkbox>\n        </FormGroup>\n\n        {needsWarehouse && (\n          <AddressSection>\n            <FormGroup>\n              <div className=\"label\">\n                <span className=\"required\">*</span>\n                <span>装柜地址</span>\n              </div>\n              <StyledInput\n                value={warehouseAddress}\n                onChange={e => setWarehouseAddress(e.target.value)}\n                placeholder=\"装柜地址\"\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <div className=\"label\">\n                <span className=\"required\">*</span>\n                <span>联系人</span>\n              </div>\n              <StyledInput\n                value={contactName}\n                onChange={e => setContactName(e.target.value)}\n                placeholder=\"联系人姓名\"\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <div className=\"label\">\n                <span className=\"required\">*</span>\n                <span>联系人电话</span>\n              </div>\n              <CurrencyInput>\n                <StyledSelect\n                  className=\"currency-select\"\n                  value={phonePrefix}\n                  onChange={(value) => setPhonePrefix(value as string)}\n                >\n                  <Select.Option value=\"+86\">+86</Select.Option>\n                  <Select.Option value=\"+61\">+61</Select.Option>\n                </StyledSelect>\n                <StyledInput\n                  className=\"value-input\"\n                  value={contactPhone}\n                  onChange={e => setContactPhone(e.target.value)}\n                  placeholder=\"电话\"\n                />\n              </CurrencyInput>\n            </FormGroup>\n\n            <AddButton icon={<PlusOutlined />}>\n              添加装柜\n            </AddButton>\n          </AddressSection>\n        )}\n      </ContentContainer>\n\n      <BottomButtons>\n        <Button onClick={onBack}>上一步</Button>\n        <Button type=\"primary\" onClick={handleNext}>下一步</Button>\n      </BottomButtons>\n    </StyledLayout>\n  );\n};\n\nexport default CargoDetails; ","import React, { useState } from 'react';\nimport { Layout, Button, Typography, Modal } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { colors, spacing, borderRadius, shadows } from '../styles/theme';\nimport GlobalHeader from '../components/layout/GlobalHeader';\n\nconst { Text } = Typography;\n\nconst StyledLayout = styled(Layout)`\n  background: ${colors.background.default};\n  min-height: 100vh;\n  width: 100%;\n`;\n\nconst HeaderContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 100;\n  background: ${colors.background.default};\n`;\n\nconst StatusBar = styled.div`\n  height: 24px;\n  background: #333333;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 ${spacing.md};\n  font-size: 12px;\n  color: white;\n`;\n\nconst Header = styled.div`\n  height: 52px;\n  padding: ${spacing.sm} ${spacing.md};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${colors.border.light};\n  background: white;\n\n  .back-button {\n    font-size: 20px;\n    color: ${colors.text.primary};\n    cursor: pointer;\n  }\n\n  .title {\n    font-size: 16px;\n    font-weight: 500;\n    color: ${colors.text.primary};\n    margin: 0;\n  }\n\n  .right-space {\n    width: 20px;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  margin-top: 76px;\n  padding: ${spacing.md};\n  padding-bottom: 120px;\n`;\n\nconst SummarySection = styled.div`\n  background: ${colors.background.light};\n  border-radius: ${borderRadius.medium};\n  padding: ${spacing.md};\n  margin-bottom: ${spacing.lg};\n\n  .section-title {\n    font-size: 16px;\n    font-weight: 500;\n    color: ${colors.text.primary};\n    margin-bottom: ${spacing.md};\n  }\n`;\n\nconst DetailItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${spacing.sm};\n  font-size: 14px;\n\n  .label {\n    color: ${colors.text.secondary};\n  }\n\n  .value {\n    color: ${colors.text.primary};\n    text-align: right;\n  }\n`;\n\nconst CargoCard = styled.div`\n  background: white;\n  border-radius: ${borderRadius.medium};\n  padding: ${spacing.md};\n  margin-bottom: ${spacing.md};\n\n  .card-title {\n    font-size: 14px;\n    font-weight: 500;\n    color: ${colors.text.primary};\n    margin-bottom: ${spacing.md};\n  }\n`;\n\nconst BottomButtons = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: ${spacing.md};\n  background: white;\n  box-shadow: ${shadows.medium};\n  display: flex;\n  gap: ${spacing.md};\n\n  .ant-btn {\n    flex: 1;\n    height: 44px;\n    font-size: 16px;\n    border-radius: ${borderRadius.medium};\n  }\n`;\n\nconst StyledModal = styled(Modal)`\n  .ant-modal-content {\n    border-radius: ${borderRadius.medium};\n    padding: 0;\n  }\n\n  .ant-modal-body {\n    padding: ${spacing.xl} ${spacing.lg};\n    text-align: center;\n  }\n\n  .ant-modal-footer {\n    padding: ${spacing.md};\n    display: flex;\n    gap: ${spacing.md};\n    border-top: none;\n\n    .ant-btn {\n      flex: 1;\n      height: 44px;\n      font-size: 16px;\n      border-radius: ${borderRadius.medium};\n      margin: 0;\n    }\n  }\n\n  .modal-icon {\n    color: ${colors.primary};\n    font-size: 24px;\n    margin-bottom: ${spacing.md};\n  }\n\n  .modal-text {\n    font-size: 16px;\n    color: ${colors.text.primary};\n    margin: 0;\n  }\n`;\n\ninterface OrderSummaryProps {\n  onBack?: () => void;\n  onNext?: () => void;\n  data?: {\n    basicInfo: {\n      transportType: string;\n      route: string;\n      departurePort: string;\n      destinationPort: string;\n    };\n    cargoInfo: {\n      containerType: string;\n      cargoType: string;\n      weight: string;\n      dimensions: string;\n      hasWarehouse: boolean;\n      warehouseAddress?: string;\n      contact?: string;\n      phone?: string;\n    }[];\n  };\n}\n\nconst OrderSummary: React.FC<OrderSummaryProps> = ({ onBack, onNext, data }) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const defaultData = {\n    basicInfo: {\n      transportType: '海运',\n      route: '中国大陆→澳大利亚',\n      departurePort: '连云港',\n      destinationPort: '悉尼',\n    },\n    cargoInfo: [\n      {\n        containerType: '整柜',\n        cargoType: '普通货物',\n        weight: '1000',\n        dimensions: '20',\n        hasWarehouse: true,\n        warehouseAddress: '上海市浦东新区XX路XX号',\n        contact: '张三',\n        phone: '+86 13800138000',\n      },\n    ],\n  };\n\n  const summaryData = data || defaultData;\n\n  const handleNextClick = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleModalConfirm = () => {\n    setIsModalVisible(false);\n    onNext?.();\n  };\n\n  const handleModalCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <StyledLayout>\n      <GlobalHeader title=\"新增委托\" onBack={onBack} />\n\n      <ContentContainer>\n        <SummarySection>\n          <div className=\"section-title\">基本委托信息</div>\n          <DetailItem>\n            <span className=\"label\">运输方式：</span>\n            <span className=\"value\">{summaryData.basicInfo.transportType}</span>\n          </DetailItem>\n          <DetailItem>\n            <span className=\"label\">物流线路：</span>\n            <span className=\"value\">{summaryData.basicInfo.route}</span>\n          </DetailItem>\n          <DetailItem>\n            <span className=\"label\">起运港：</span>\n            <span className=\"value\">{summaryData.basicInfo.departurePort}</span>\n          </DetailItem>\n          <DetailItem>\n            <span className=\"label\">目的地港：</span>\n            <span className=\"value\">{summaryData.basicInfo.destinationPort}</span>\n          </DetailItem>\n        </SummarySection>\n\n        <SummarySection>\n          <div className=\"section-title\">商品信息</div>\n          {summaryData.cargoInfo.map((cargo, index) => (\n            <CargoCard key={index}>\n              <div className=\"card-title\">货柜 {index + 1}</div>\n              <DetailItem>\n                <span className=\"label\">柜型选择</span>\n                <span className=\"value\">{cargo.containerType}</span>\n              </DetailItem>\n              <DetailItem>\n                <span className=\"label\">货物类型</span>\n                <span className=\"value\">{cargo.cargoType}</span>\n              </DetailItem>\n              <DetailItem>\n                <span className=\"label\">货物总重量(kg)</span>\n                <span className=\"value\">{cargo.weight}</span>\n              </DetailItem>\n              <DetailItem>\n                <span className=\"label\">货物总尺寸(cbm)</span>\n                <span className=\"value\">{cargo.dimensions}</span>\n              </DetailItem>\n              {cargo.hasWarehouse && (\n                <>\n                  <DetailItem>\n                    <span className=\"label\">上门装柜：</span>\n                    <span className=\"value\">是</span>\n                  </DetailItem>\n                  <DetailItem>\n                    <span className=\"label\">装柜地址：</span>\n                    <span className=\"value\">{cargo.warehouseAddress}</span>\n                  </DetailItem>\n                  <DetailItem>\n                    <span className=\"label\">联系人</span>\n                    <span className=\"value\">{cargo.contact}</span>\n                  </DetailItem>\n                  <DetailItem>\n                    <span className=\"label\">联系人电话</span>\n                    <span className=\"value\">{cargo.phone}</span>\n                  </DetailItem>\n                </>\n              )}\n            </CargoCard>\n          ))}\n        </SummarySection>\n      </ContentContainer>\n\n      <BottomButtons>\n        <Button onClick={onBack}>上一步</Button>\n        <Button type=\"primary\" onClick={handleNextClick}>下一步</Button>\n      </BottomButtons>\n\n      <StyledModal\n        visible={isModalVisible}\n        onOk={handleModalConfirm}\n        onCancel={handleModalCancel}\n        footer={[\n          <Button key=\"cancel\" onClick={handleModalCancel}>否</Button>,\n          <Button key=\"confirm\" type=\"primary\" onClick={handleModalConfirm}>是</Button>,\n        ]}\n        centered\n        closable={false}\n        width={320}\n      >\n        <InfoCircleOutlined className=\"modal-icon\" />\n        <p className=\"modal-text\">即将创建订舱头号，是否确认？</p>\n      </StyledModal>\n    </StyledLayout>\n  );\n};\n\nexport default OrderSummary; ","import React, { useState } from 'react';\nimport { Layout, Radio, Select, Space, Button, Typography } from 'antd';\nimport styled from 'styled-components';\nimport { colors, spacing, borderRadius, shadows } from '../styles/theme';\nimport GlobalHeader from '../components/layout/GlobalHeader';\n\nconst { Title } = Typography;\n\nconst StyledLayout = styled(Layout)`\n  background: ${colors.background.default};\n  min-height: 100vh;\n  width: 100%;\n`;\n\nconst ContentContainer = styled.div`\n  margin-top: 76px;\n  padding: ${spacing.md};\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: ${spacing.lg};\n\n  .label {\n    font-size: 14px;\n    color: ${colors.text.primary};\n    margin-bottom: ${spacing.sm};\n    display: flex;\n    align-items: center;\n\n    .required {\n      color: ${colors.status.error};\n      margin-right: 4px;\n    }\n  }\n`;\n\nconst StyledRadioGroup = styled(Radio.Group)`\n  display: flex;\n  gap: ${spacing.sm};\n\n  .ant-radio-wrapper {\n    border: 1px solid ${colors.border.light};\n    padding: ${spacing.sm} ${spacing.md};\n    border-radius: ${borderRadius.medium};\n    margin-right: 0;\n\n    &-checked {\n      border-color: ${colors.primary};\n      background: ${colors.background.blue};\n    }\n  }\n`;\n\nconst StyledSelect = styled(Select)`\n  width: 100%;\n\n  .ant-select-selector {\n    height: 44px !important;\n    padding: ${spacing.sm} ${spacing.md} !important;\n    border-radius: ${borderRadius.medium} !important;\n\n    .ant-select-selection-search-input {\n      height: 42px !important;\n    }\n\n    .ant-select-selection-placeholder,\n    .ant-select-selection-item {\n      line-height: 28px !important;\n    }\n  }\n`;\n\nconst BottomButtons = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: ${spacing.md};\n  background: white;\n  box-shadow: ${shadows.medium};\n  display: flex;\n  gap: ${spacing.md};\n\n  .ant-btn {\n    flex: 1;\n    height: 44px;\n    font-size: 16px;\n    border-radius: ${borderRadius.medium};\n  }\n`;\n\ninterface ShippingRouteProps {\n  onBack?: () => void;\n  onNext?: (values: any) => void;\n}\n\nconst ShippingRoute: React.FC<ShippingRouteProps> = ({ onBack, onNext }) => {\n  const [transportType, setTransportType] = useState<'sea' | 'air'>('sea');\n  const [route, setRoute] = useState<string>('中国大陆→澳大利亚');\n  const [departurePort, setDeparturePort] = useState<string>();\n  const [destinationPort, setDestinationPort] = useState<string>();\n\n  const handleNext = () => {\n    onNext?.({\n      transportType,\n      route,\n      departurePort,\n      destinationPort,\n    });\n  };\n\n  return (\n    <StyledLayout>\n      <GlobalHeader title=\"新增委托\" onBack={onBack} />\n\n      <ContentContainer>\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>海运/空运</span>\n          </div>\n          <StyledRadioGroup \n            value={transportType}\n            onChange={e => setTransportType(e.target.value)}\n          >\n            <Radio value=\"sea\">海运</Radio>\n            <Radio value=\"air\">空运</Radio>\n          </StyledRadioGroup>\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">物流线路</div>\n          <StyledSelect\n            value={route}\n            onChange={(value) => setRoute(value as string)}\n          >\n            <Select.Option value=\"中国大陆→澳大利亚\">中国大陆→澳大利亚</Select.Option>\n          </StyledSelect>\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">起运港</div>\n          <StyledSelect\n            value={departurePort}\n            onChange={(value) => setDeparturePort(value as string)}\n            placeholder=\"请选择\"\n          >\n            <Select.Option value=\"port1\">青岛港</Select.Option>\n            <Select.Option value=\"port2\">上海港</Select.Option>\n            <Select.Option value=\"port3\">深圳港</Select.Option>\n          </StyledSelect>\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">目的地港</div>\n          <StyledSelect\n            value={destinationPort}\n            onChange={(value) => setDestinationPort(value as string)}\n            placeholder=\"请选择\"\n          >\n            <Select.Option value=\"port1\">悉尼港</Select.Option>\n            <Select.Option value=\"port2\">墨尔本港</Select.Option>\n            <Select.Option value=\"port3\">布里斯班港</Select.Option>\n          </StyledSelect>\n        </FormGroup>\n      </ContentContainer>\n\n      <BottomButtons>\n        <Button onClick={onBack}>上一步</Button>\n        <Button type=\"primary\" onClick={handleNext}>下一步</Button>\n      </BottomButtons>\n    </StyledLayout>\n  );\n};\n\nexport default ShippingRoute; ","import React from 'react';\nimport { Layout, Button, Typography } from 'antd';\nimport { CopyOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { colors, spacing, borderRadius } from '../styles/theme';\nimport GlobalHeader from '../components/layout/GlobalHeader';\n\nconst { Text } = Typography;\n\nconst StyledLayout = styled(Layout)`\n  background: ${colors.background.default};\n  min-height: 100vh;\n  width: 100%;\n`;\n\nconst ContentContainer = styled.div`\n  margin-top: 76px;\n  padding: ${spacing.md};\n`;\n\nconst Title = styled.h2`\n  font-size: 18px;\n  font-weight: 500;\n  color: ${colors.text.primary};\n  margin-bottom: ${spacing.lg};\n  text-align: center;\n`;\n\nconst InfoCard = styled.div`\n  background: white;\n  border-radius: ${borderRadius.medium};\n  padding: ${spacing.md};\n  margin-bottom: ${spacing.lg};\n`;\n\nconst InfoRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${spacing.sm} 0;\n  border-bottom: 1px solid ${colors.border.light};\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  .label {\n    color: ${colors.text.secondary};\n    font-size: 14px;\n  }\n\n  .value {\n    color: ${colors.text.primary};\n    font-size: 14px;\n    display: flex;\n    align-items: center;\n    gap: ${spacing.xs};\n  }\n`;\n\nconst Message = styled.p`\n  font-size: 14px;\n  color: ${colors.text.secondary};\n  text-align: center;\n  margin: ${spacing.lg} 0;\n  line-height: 1.5;\n`;\n\nconst DownloadButton = styled(Button)`\n  width: 100%;\n  height: 44px;\n  margin-bottom: ${spacing.lg};\n  border-radius: ${borderRadius.medium};\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: ${spacing.md};\n  margin-top: ${spacing.xl};\n\n  .ant-btn {\n    flex: 1;\n    height: 44px;\n    border-radius: ${borderRadius.medium};\n  }\n`;\n\ninterface BookingSuccessProps {\n  bookingData?: {\n    bookingNumber: string;\n    origin: string;\n    departure: string;\n    destination: string;\n    warehouseAddress: string;\n  };\n  onEdit?: () => void;\n  onNext?: () => void;\n}\n\nconst BookingSuccess: React.FC<BookingSuccessProps> = ({\n  bookingData = {\n    bookingNumber: 'UE-006-2024',\n    origin: '中国-郑州',\n    departure: '中国-广州',\n    destination: '澳大利亚-悉尼',\n    warehouseAddress: '澳大利亚-悉尼',\n  },\n  onEdit,\n  onNext,\n}) => {\n  const handleCopy = () => {\n    navigator.clipboard.writeText(bookingData.bookingNumber);\n  };\n\n  return (\n    <StyledLayout>\n      <GlobalHeader />\n      <ContentContainer>\n        <Title>哨头号创建成功</Title>\n\n        <InfoCard>\n          <InfoRow>\n            <span className=\"label\">哨头号</span>\n            <div className=\"value\">\n              {bookingData.bookingNumber}\n              <CopyOutlined onClick={handleCopy} style={{ cursor: 'pointer' }} />\n            </div>\n          </InfoRow>\n          <InfoRow>\n            <span className=\"label\">出货地</span>\n            <span className=\"value\">{bookingData.origin}</span>\n          </InfoRow>\n          <InfoRow>\n            <span className=\"label\">起运港</span>\n            <span className=\"value\">{bookingData.departure}</span>\n          </InfoRow>\n          <InfoRow>\n            <span className=\"label\">目的地</span>\n            <span className=\"value\">{bookingData.destination}</span>\n          </InfoRow>\n          <InfoRow>\n            <span className=\"label\">集运仓地址</span>\n            <span className=\"value\">{bookingData.warehouseAddress}</span>\n          </InfoRow>\n        </InfoCard>\n\n        <Message>\n          请务必下载哨头面单，打印并贴贴于每件货物外箱。如缺失面单，将无法送进入库。\n        </Message>\n\n        <DownloadButton type=\"primary\">下载哨头面单</DownloadButton>\n\n        <ButtonGroup>\n          <Button onClick={onEdit}>稍后录入</Button>\n          <Button type=\"primary\" onClick={onNext}>立即录入</Button>\n        </ButtonGroup>\n      </ContentContainer>\n    </StyledLayout>\n  );\n};\n\nexport default BookingSuccess; ","import React from 'react';\nimport { Layout, Input, Select, Button, Typography } from 'antd';\nimport styled from 'styled-components';\nimport { colors, spacing, borderRadius } from '../styles/theme';\nimport GlobalHeader from '../components/layout/GlobalHeader';\n\nconst { TextArea } = Input;\n\nconst StyledLayout = styled(Layout)`\n  background: ${colors.background.default};\n  min-height: 100vh;\n  width: 100%;\n`;\n\nconst ContentContainer = styled.div`\n  margin-top: 76px;\n  padding: ${spacing.md};\n  padding-bottom: 120px;\n`;\n\nconst Breadcrumb = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.xs};\n  margin-bottom: ${spacing.lg};\n  font-size: 14px;\n  color: ${colors.text.secondary};\n\n  .current {\n    color: ${colors.text.primary};\n  }\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: ${spacing.lg};\n\n  .label {\n    display: flex;\n    align-items: center;\n    margin-bottom: ${spacing.xs};\n    \n    .required {\n      color: ${colors.status.error};\n      margin-right: 4px;\n    }\n\n    .translate {\n      margin-left: auto;\n      color: ${colors.primary};\n      font-size: 12px;\n    }\n  }\n\n  .hint {\n    font-size: 12px;\n    color: ${colors.text.secondary};\n    margin-top: ${spacing.xs};\n  }\n`;\n\nconst StyledInput = styled(Input)`\n  height: 44px;\n  border-radius: ${borderRadius.medium};\n`;\n\nconst StyledSelect = styled(Select)`\n  width: 100%;\n  \n  .ant-select-selector {\n    height: 44px !important;\n    padding: 6px 12px !important;\n    border-radius: ${borderRadius.medium} !important;\n  }\n`;\n\nconst CurrencyInput = styled.div`\n  display: flex;\n  gap: ${spacing.sm};\n\n  .currency-select {\n    width: 80px;\n  }\n\n  .value-input {\n    flex: 1;\n  }\n`;\n\nconst BottomButtons = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: ${spacing.md};\n  background: white;\n  display: flex;\n  gap: ${spacing.md};\n  box-shadow: 0 -2px 8px rgba(0, 0, 0, 0.06);\n\n  .ant-btn {\n    flex: 1;\n    height: 44px;\n    border-radius: ${borderRadius.medium};\n  }\n`;\n\ninterface CargoInputProps {\n  bookingNumber?: string;\n  onCancel?: () => void;\n  onSave?: (values: any) => void;\n}\n\nconst CargoInput: React.FC<CargoInputProps> = ({\n  bookingNumber = 'AU4383',\n  onCancel,\n  onSave,\n}) => {\n  return (\n    <StyledLayout>\n      <GlobalHeader />\n      <ContentContainer>\n        <Breadcrumb>\n          <span>首页</span>\n          <span>{'>'}</span>\n          <span>哨头号 {bookingNumber}</span>\n          <span>{'>'}</span>\n          <span className=\"current\">录入商品信息</span>\n        </Breadcrumb>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>中文品名</span>\n            <span className=\"translate\">英译中</span>\n          </div>\n          <StyledInput placeholder=\"中文品名\" />\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>英文品名</span>\n            <span className=\"translate\">中译英</span>\n          </div>\n          <StyledInput placeholder=\"英文品名\" />\n          <div className=\"hint\">中英文译转仅一次建议，仅供参考，最终翻译人工审核。</div>\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>商品材质</span>\n          </div>\n          <StyledSelect placeholder=\"商品材质\" />\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>商品套数</span>\n          </div>\n          <StyledInput placeholder=\"商品套数\" />\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>箱数</span>\n          </div>\n          <StyledInput placeholder=\"箱数\" />\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>重量(kg)</span>\n          </div>\n          <StyledInput placeholder=\"重量\" />\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>体积(cbm)</span>\n          </div>\n          <StyledSelect placeholder=\"体积\" />\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>单价</span>\n          </div>\n          <CurrencyInput>\n            <Select defaultValue=\"AUD\" className=\"currency-select\" />\n            <StyledInput placeholder=\"单价\" className=\"value-input\" />\n          </CurrencyInput>\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>货值</span>\n          </div>\n          <CurrencyInput>\n            <Select defaultValue=\"AUD\" className=\"currency-select\" />\n            <StyledInput placeholder=\"货值\" className=\"value-input\" />\n          </CurrencyInput>\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span>备注</span>\n          </div>\n          <TextArea rows={4} placeholder=\"备注\" />\n        </FormGroup>\n\n        <BottomButtons>\n          <Button onClick={onCancel}>取消</Button>\n          <Button type=\"primary\" onClick={onSave}>保存</Button>\n        </BottomButtons>\n      </ContentContainer>\n    </StyledLayout>\n  );\n};\n\nexport default CargoInput; ","import React, { useState } from 'react';\nimport { Layout, Input, Button, Checkbox } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { colors, spacing, borderRadius } from '../styles/theme';\nimport GlobalHeader from '../components/layout/GlobalHeader';\n\nconst { Search } = Input;\n\nconst StyledLayout = styled(Layout)`\n  background: ${colors.background.default};\n  min-height: 100vh;\n  width: 100%;\n`;\n\nconst ContentContainer = styled.div`\n  margin-top: 76px;\n  padding: ${spacing.md};\n  padding-bottom: 120px;\n`;\n\nconst Breadcrumb = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.xs};\n  margin-bottom: ${spacing.lg};\n  font-size: 14px;\n  color: ${colors.text.secondary};\n\n  .current {\n    color: ${colors.text.primary};\n  }\n`;\n\nconst SearchContainer = styled.div`\n  margin-bottom: ${spacing.md};\n\n  .ant-input-affix-wrapper {\n    background: #F5F5F5;\n    border: none;\n    border-radius: ${borderRadius.medium};\n    padding: ${spacing.sm} ${spacing.md};\n\n    &:hover, &:focus, &-focused {\n      background: #F5F5F5;\n    }\n\n    .anticon {\n      color: ${colors.text.secondary};\n      margin-right: ${spacing.sm};\n    }\n\n    input.ant-input {\n      background: transparent;\n      font-size: 14px;\n\n      &::placeholder {\n        color: ${colors.text.secondary};\n      }\n    }\n  }\n`;\n\nconst FilterTags = styled.div`\n  display: flex;\n  gap: ${spacing.xs};\n  margin-bottom: ${spacing.md};\n  overflow-x: auto;\n  padding-bottom: ${spacing.xs};\n  -webkit-overflow-scrolling: touch;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst FilterTag = styled(Button)<{ $active?: boolean }>`\n  flex-shrink: 0;\n  border-radius: 16px;\n  height: 32px;\n  padding: 0 ${spacing.md};\n  background: ${props => props.$active ? colors.primary : 'white'};\n  color: ${props => props.$active ? 'white' : colors.text.secondary};\n  border: 1px solid ${props => props.$active ? colors.primary : colors.border.light};\n\n  &:hover {\n    color: ${props => props.$active ? 'white' : colors.primary} !important;\n    border-color: ${colors.primary} !important;\n  }\n`;\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${spacing.sm};\n`;\n\nconst ListItem = styled.div<{ $selected?: boolean }>`\n  background: ${props => props.$selected ? 'white' : '#F5F5F5'};\n  border-radius: ${borderRadius.medium};\n  padding: ${spacing.md};\n  display: flex;\n  flex-direction: column;\n  gap: ${spacing.sm};\n  border: 1px solid ${props => props.$selected ? colors.primary : 'transparent'};\n  transition: all 0.2s ease;\n`;\n\nconst ItemHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst ItemInfo = styled.div<{ $selected?: boolean }>`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.sm};\n\n  .booking-number {\n    font-size: 14px;\n    color: ${props => props.$selected ? colors.primary : colors.text.primary};\n  }\n`;\n\nconst ItemFooter = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  .description {\n    font-size: 14px;\n    color: ${colors.text.secondary};\n  }\n`;\n\nconst ViewDetailsButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 14px;\n  color: ${colors.text.secondary};\n  padding: ${spacing.xs} ${spacing.sm};\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  border-radius: ${borderRadius.small};\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.05);\n  }\n`;\n\nconst StatusBadge = styled.div<{ $status: 'success' | 'warning' | 'error' }>`\n  padding: 4px 8px;\n  border-radius: ${borderRadius.small};\n  font-size: 12px;\n  background: ${props => {\n    switch (props.$status) {\n      case 'success':\n        return '#E6F7FF';\n      case 'warning':\n        return '#FFF7E6';\n      case 'error':\n        return '#FFF1F0';\n      default:\n        return '#E6F7FF';\n    }\n  }};\n  color: ${props => {\n    switch (props.$status) {\n      case 'success':\n        return '#1890FF';\n      case 'warning':\n        return '#FA8C16';\n      case 'error':\n        return '#F5222D';\n      default:\n        return '#1890FF';\n    }\n  }};\n`;\n\nconst BottomBar = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: ${spacing.md};\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(8px);\n  display: flex;\n  align-items: center;\n  gap: ${spacing.md};\n  border-top: 1px solid ${colors.border.light};\n\n  .select-all {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    gap: ${spacing.xs};\n  }\n\n  .total {\n    flex: 1;\n    font-size: 14px;\n    color: ${colors.text.secondary};\n  }\n\n  .ant-btn {\n    height: 44px;\n    border-radius: ${borderRadius.medium};\n    padding: 0 ${spacing.xl};\n  }\n`;\n\ninterface SpecialHandlingProps {\n  onBack?: () => void;\n}\n\nconst SpecialHandling: React.FC<SpecialHandlingProps> = ({ onBack }) => {\n  const [selectedFilter, setSelectedFilter] = useState('待处理');\n  const [selectAll, setSelectAll] = useState(false);\n  const [selectedItems, setSelectedItems] = useState<number[]>([]);\n\n  const filters = ['待处理', '打印中', '待支付', '待发货', '运输中', '待提取'];\n\n  const mockData = [\n    {\n      bookingNumber: 'AU4363',\n      description: '普货 | 40尺标准柜 | 深圳仓 A12-B05',\n      status: 'success' as const,\n      statusText: '信息完全',\n    },\n    {\n      bookingNumber: 'AU4363',\n      description: '危险品 | 20尺高柜 | 等待危险品证书',\n      status: 'warning' as const,\n      statusText: '信息缺失',\n    },\n  ];\n\n  const handleSelectAll = (checked: boolean) => {\n    setSelectAll(checked);\n    setSelectedItems(checked ? mockData.map((_, index) => index) : []);\n  };\n\n  const handleSelectItem = (index: number) => {\n    setSelectedItems(prev => {\n      const newSelected = prev.includes(index)\n        ? prev.filter(i => i !== index)\n        : [...prev, index];\n      setSelectAll(newSelected.length === mockData.length);\n      return newSelected;\n    });\n  };\n\n  return (\n    <StyledLayout>\n      <GlobalHeader />\n      <ContentContainer>\n        <Breadcrumb>\n          <span>首页</span>\n          <span>{'>'}</span>\n          <span className=\"current\">特处理</span>\n        </Breadcrumb>\n\n        <SearchContainer>\n          <Input\n            placeholder=\"集运单查询\"\n            prefix={<SearchOutlined style={{ fontSize: 16 }} />}\n            allowClear\n          />\n        </SearchContainer>\n\n        <FilterTags>\n          {filters.map(filter => (\n            <FilterTag\n              key={filter}\n              $active={selectedFilter === filter}\n              onClick={() => setSelectedFilter(filter)}\n            >\n              {filter}\n            </FilterTag>\n          ))}\n        </FilterTags>\n\n        <ListContainer>\n          {mockData.map((item, index) => (\n            <ListItem \n              key={index} \n              $selected={selectedItems.includes(index)}\n              onClick={() => handleSelectItem(index)}\n            >\n              <ItemHeader>\n                <ItemInfo $selected={selectedItems.includes(index)}>\n                  <Checkbox\n                    checked={selectedItems.includes(index)}\n                    onChange={(e) => {\n                      e.stopPropagation();\n                      handleSelectItem(index);\n                    }}\n                  />\n                  <div className=\"booking-number\">哨头号：{item.bookingNumber}</div>\n                </ItemInfo>\n                <StatusBadge $status={item.status}>\n                  {item.statusText}\n                </StatusBadge>\n              </ItemHeader>\n              <ItemFooter>\n                <div className=\"description\">{item.description}</div>\n                <ViewDetailsButton onClick={(e) => e.stopPropagation()}>\n                  查看详情\n                </ViewDetailsButton>\n              </ItemFooter>\n            </ListItem>\n          ))}\n        </ListContainer>\n\n        <BottomBar>\n          <div className=\"select-all\">\n            <Checkbox\n              checked={selectAll}\n              onChange={(e) => handleSelectAll(e.target.checked)}\n            />\n            <span>全选</span>\n          </div>\n          <div className=\"total\">已选 {selectedItems.length}</div>\n          <Button type=\"primary\">结算</Button>\n        </BottomBar>\n      </ContentContainer>\n    </StyledLayout>\n  );\n};\n\nexport default SpecialHandling; ","import React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { borderRadius } from '../../styles/theme';\n\nconst PreviewContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  min-height: 300px;\n  border-radius: ${borderRadius.medium};\n  overflow: hidden;\n  background: #000;\n`;\n\nconst Video = styled.video`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\ninterface CameraPreviewProps {\n  stream: MediaStream | null;\n  zoom: number;\n}\n\nconst CameraPreview: React.FC<CameraPreviewProps> = ({ stream, zoom }) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    if (videoRef.current && stream) {\n      videoRef.current.srcObject = stream;\n    }\n  }, [stream]);\n\n  useEffect(() => {\n    if (videoRef.current && stream) {\n      const track = stream.getVideoTracks()[0];\n      const capabilities = track.getCapabilities();\n      \n      if ('zoom' in capabilities) {\n        track.applyConstraints({\n          advanced: [{ zoom }]\n        });\n      }\n    }\n  }, [zoom, stream]);\n\n  return (\n    <PreviewContainer>\n      <Video\n        ref={videoRef}\n        autoPlay\n        playsInline\n        muted\n      />\n    </PreviewContainer>\n  );\n};\n\nexport default CameraPreview; ","import React from 'react';\nimport { Button } from 'antd';\nimport styled from 'styled-components';\nimport { colors } from '../../styles/theme';\n\nconst StyledButton = styled(Button)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: ${colors.background.light};\n  border: none;\n  padding: 0;\n  \n  &:hover {\n    background: ${colors.background.hover};\n  }\n\n  .anticon {\n    font-size: 20px;\n    color: ${colors.text.primary};\n  }\n`;\n\ninterface IconButtonProps {\n  icon: React.ReactNode;\n  onClick?: () => void;\n  title?: string;\n}\n\nconst IconButton: React.FC<IconButtonProps> = ({ icon, onClick, title }) => {\n  return (\n    <StyledButton\n      type=\"text\"\n      icon={icon}\n      onClick={onClick}\n      title={title}\n    />\n  );\n};\n\nexport default IconButton; ","import React from 'react';\nimport styled from 'styled-components';\nimport { Slider } from 'antd';\nimport { ZoomInOutlined, ZoomOutOutlined, CameraOutlined } from '@ant-design/icons';\nimport { colors, spacing, borderRadius } from '../../styles/theme';\nimport IconButton from '../atoms/IconButton';\n\nconst ControlsWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${spacing.lg};\n  padding-bottom: ${spacing.xl};\n`;\n\nconst ControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.md};\n  padding: ${spacing.sm} ${spacing.md};\n  background: rgba(0, 0, 0, 0.6);\n  border-radius: 100px;\n  backdrop-filter: blur(8px);\n  min-width: 240px;\n`;\n\nconst ZoomButton = styled(IconButton)`\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  background: white;\n  color: ${colors.text.primary};\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background: ${colors.background.light};\n  }\n\n  .anticon {\n    font-size: 20px;\n  }\n`;\n\nconst ZoomSlider = styled(Slider)`\n  flex: 1;\n  margin: 0 ${spacing.xs};\n\n  .ant-slider-rail {\n    background-color: rgba(255, 255, 255, 0.3);\n    height: 2px;\n  }\n\n  .ant-slider-track {\n    background-color: white;\n    height: 2px;\n  }\n\n  .ant-slider-handle {\n    width: 12px;\n    height: 12px;\n    border-color: white;\n    background-color: white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    margin-top: -5px;\n\n    &:hover, &:active {\n      border-color: white;\n    }\n  }\n`;\n\nconst CaptureButton = styled.button`\n  width: 72px;\n  height: 72px;\n  border-radius: 50%;\n  background: ${colors.primary};\n  border: 4px solid white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n\n  .anticon {\n    color: white;\n    font-size: 32px;\n  }\n`;\n\ninterface CameraControlsProps {\n  onZoomChange: (value: number) => void;\n  onCapture: () => void;\n  minZoom?: number;\n  maxZoom?: number;\n  currentZoom?: number;\n}\n\nconst CameraControls: React.FC<CameraControlsProps> = ({\n  onZoomChange,\n  onCapture,\n  minZoom = 1,\n  maxZoom = 5,\n  currentZoom = 1,\n}) => {\n  return (\n    <ControlsWrapper>\n      <ControlsContainer>\n        <ZoomButton\n          icon={<ZoomOutOutlined />}\n          onClick={() => onZoomChange(Math.max(minZoom, currentZoom - 0.5))}\n        />\n        <ZoomSlider\n          min={minZoom}\n          max={maxZoom}\n          step={0.1}\n          value={currentZoom}\n          onChange={onZoomChange}\n        />\n        <ZoomButton\n          icon={<ZoomInOutlined />}\n          onClick={() => onZoomChange(Math.min(maxZoom, currentZoom + 0.5))}\n        />\n      </ControlsContainer>\n      <CaptureButton onClick={onCapture}>\n        <CameraOutlined />\n      </CaptureButton>\n    </ControlsWrapper>\n  );\n};\n\nexport default CameraControls; ","import React, { useState, useCallback, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Upload, message } from 'antd';\nimport { CameraOutlined, UploadOutlined } from '@ant-design/icons';\nimport { colors, spacing, borderRadius } from '../../styles/theme';\nimport CameraPreview from '../atoms/CameraPreview';\nimport CameraControls from '../molecules/CameraControls';\n\nconst { Dragger } = Upload;\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  min-height: 300px;\n  border-radius: ${borderRadius.medium};\n  overflow: hidden;\n`;\n\nconst StyledDropzone = styled(Dragger)`\n  &.ant-upload-wrapper {\n    .ant-upload {\n      background: ${colors.background.light};\n      border: 2px dashed ${colors.border.light};\n      border-radius: ${borderRadius.medium};\n      padding: ${spacing.xl};\n      \n      &:hover {\n        border-color: #1890ff;\n      }\n    }\n  }\n\n  .upload-hint {\n    margin-top: ${spacing.md};\n    color: ${colors.text.secondary};\n    font-size: 14px;\n  }\n`;\n\nconst CameraContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 300px;\n`;\n\ninterface CameraDropzoneProps {\n  onFileSelect: (file: File) => void;\n  onCapture: (blob: Blob) => void;\n  accept?: string;\n  maxSize?: number;\n}\n\nconst CameraDropzone: React.FC<CameraDropzoneProps> = ({\n  onFileSelect,\n  onCapture,\n  accept = 'image/*',\n  maxSize = 10 * 1024 * 1024, // 10MB\n}) => {\n  const [stream, setStream] = useState<MediaStream | null>(null);\n  const [zoom, setZoom] = useState(1);\n  const [minZoom, setMinZoom] = useState(1);\n  const [maxZoom, setMaxZoom] = useState(1);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const startCamera = useCallback(async () => {\n    try {\n      const mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: 'environment',\n          width: { ideal: 1920 },\n          height: { ideal: 1080 },\n        }\n      });\n\n      setStream(mediaStream);\n      setIsCameraActive(true);\n\n      // Get zoom capabilities\n      const track = mediaStream.getVideoTracks()[0];\n      const capabilities = track.getCapabilities();\n      \n      if ('zoom' in capabilities) {\n        setMinZoom(capabilities.zoom?.min || 1);\n        setMaxZoom(capabilities.zoom?.max || 1);\n      }\n    } catch (error) {\n      message.error('无法访问相机，请检查权限设置');\n    }\n  }, []);\n\n  const stopCamera = useCallback(() => {\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n      setStream(null);\n      setIsCameraActive(false);\n    }\n  }, [stream]);\n\n  const handleCapture = useCallback(() => {\n    if (!stream) return;\n\n    const video = document.querySelector('video');\n    const canvas = canvasRef.current;\n\n    if (video && canvas) {\n      const context = canvas.getContext('2d');\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      \n      if (context) {\n        context.drawImage(video, 0, 0);\n        canvas.toBlob((blob) => {\n          if (blob) {\n            onCapture(blob);\n            stopCamera();\n          }\n        }, 'image/jpeg', 0.95);\n      }\n    }\n  }, [stream, onCapture, stopCamera]);\n\n  const handleZoomChange = useCallback((value: number) => {\n    setZoom(value);\n  }, []);\n\n  const uploadProps = {\n    accept,\n    maxSize,\n    multiple: false,\n    showUploadList: false,\n    beforeUpload: (file: File) => {\n      if (file.size > maxSize) {\n        message.error('文件大小不能超过10MB');\n        return false;\n      }\n      onFileSelect(file);\n      return false;\n    },\n  };\n\n  return (\n    <Container>\n      {isCameraActive ? (\n        <CameraContainer>\n          <CameraPreview stream={stream} zoom={zoom} />\n          <CameraControls\n            zoom={zoom}\n            minZoom={minZoom}\n            maxZoom={maxZoom}\n            onZoomChange={handleZoomChange}\n            onCapture={handleCapture}\n          />\n          <canvas ref={canvasRef} style={{ display: 'none' }} />\n        </CameraContainer>\n      ) : (\n        <StyledDropzone {...uploadProps}>\n          <p className=\"ant-upload-drag-icon\">\n            <UploadOutlined />\n          </p>\n          <p className=\"ant-upload-text\">点击或拖拽文件到此处上传</p>\n          <p className=\"upload-hint\">支持jpg、png、pdf格式，单个文件不超过10MB</p>\n          <div style={{ marginTop: spacing.md }}>\n            <span \n              onClick={(e) => {\n                e.stopPropagation();\n                startCamera();\n              }}\n              style={{ \n                cursor: 'pointer',\n                color: '#1890ff',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                gap: spacing.xs\n              }}\n            >\n              <CameraOutlined />\n              使用相机拍照\n            </span>\n          </div>\n        </StyledDropzone>\n      )}\n    </Container>\n  );\n};\n\nexport default CameraDropzone; ","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Modal } from 'antd';\nimport { FileTextOutlined } from '@ant-design/icons';\nimport { colors, spacing } from '../../styles/theme';\nimport CameraDropzone from '../organisms/CameraDropzone';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${spacing.xs};\n`;\n\nconst FileLink = styled.a`\n  color: #1890ff;\n  font-size: 14px;\n  text-decoration: none;\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  .anticon {\n    font-size: 14px;\n  }\n`;\n\nconst Label = styled.span`\n  color: ${colors.text.secondary};\n  font-size: 14px;\n`;\n\ninterface FileUploadItemProps {\n  label: string;\n  onFileSelect: (file: File | Blob) => void;\n}\n\nconst FileUploadItem: React.FC<FileUploadItemProps> = ({\n  label,\n  onFileSelect,\n}) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const handleFileSelect = (file: File) => {\n    onFileSelect(file);\n    setIsModalVisible(false);\n  };\n\n  const handleCapture = (blob: Blob) => {\n    onFileSelect(blob);\n    setIsModalVisible(false);\n  };\n\n  return (\n    <Container>\n      <Label>{label}</Label>\n      <FileLink onClick={() => setIsModalVisible(true)}>\n        <FileTextOutlined />\n        点击上传\n      </FileLink>\n\n      <Modal\n        title={`上传${label}`}\n        open={isModalVisible}\n        onCancel={() => setIsModalVisible(false)}\n        footer={null}\n        width={600}\n        centered\n      >\n        <CameraDropzone\n          onFileSelect={handleFileSelect}\n          onCapture={handleCapture}\n          accept=\"image/*,.pdf\"\n          maxSize={10 * 1024 * 1024}\n        />\n      </Modal>\n    </Container>\n  );\n};\n\nexport default FileUploadItem; ","import React, { useState, useEffect, useRef } from 'react';\nimport { Layout, Button, Collapse, Modal, message, Space, Card, Typography, Divider, Row, Col, Alert, Flex, Form, Input, Select, DatePicker, Radio, List, Descriptions, Badge, Timeline, Statistic, Avatar, Tag } from 'antd';\nimport styled from 'styled-components';\nimport { colors, spacing, borderRadius } from '../styles/theme';\nimport GlobalHeader from '../components/layout/GlobalHeader';\nimport { RightOutlined, EditOutlined, WarningOutlined, FileTextOutlined, DownOutlined, DownloadOutlined, PrinterOutlined, InboxOutlined } from '@ant-design/icons';\nimport JsBarcode from 'jsbarcode';\nimport QRCode from 'qrcode';\nimport html2canvas from 'html2canvas';\nimport FileUploadItem from '../components/molecules/FileUploadItem';\nimport ShipperModal from '../components/organisms/ShipperModal';\nimport dayjs from 'dayjs';\n\nconst { Title, Text, Paragraph } = Typography;\nconst { Option } = Select;\nconst { Panel } = Collapse;\n\nconst StyledLayout = styled(Layout)`\n  background: ${colors.background.default};\n  min-height: 100vh;\n  width: 100%;\n`;\n\nconst ContentContainer = styled.div`\n  margin-top: 76px;\n  padding: ${spacing.sm};\n  padding-bottom: 120px;\n`;\n\nconst Breadcrumb = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.xs};\n  margin-bottom: ${spacing.lg};\n  font-size: 14px;\n  color: ${colors.text.secondary};\n\n  .current {\n    color: ${colors.text.primary};\n  }\n`;\n\nconst Section = styled.div`\n  background: white;\n  border-radius: ${borderRadius.medium};\n  margin-bottom: ${spacing.md};\n`;\n\nconst SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${spacing.md};\n  border-bottom: 1px solid ${colors.border.light};\n\n  .title {\n    font-size: 16px;\n    font-weight: 500;\n    color: ${colors.text.primary};\n  }\n\n  .action {\n    color: ${colors.text.secondary};\n    font-size: 14px;\n  }\n`;\n\nconst InfoGrid = styled.div`\n  padding: ${spacing.md};\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: ${spacing.md};\n`;\n\nconst InfoItem = styled.div`\n  .label {\n    font-size: 14px;\n    color: ${colors.text.secondary};\n    margin-bottom: 4px;\n  }\n\n  .value {\n    font-size: 14px;\n    color: ${colors.text.primary};\n  }\n`;\n\nconst StyledDivider = styled.div`\n  height: 1px;\n  background: ${colors.border.light};\n  margin: 0 ${spacing.md};\n`;\n\nconst FileSection = styled.div`\n  padding: ${spacing.md};\n\n  .hint {\n    font-size: 12px;\n    color: #ff4d4f;\n    margin-bottom: ${spacing.sm};\n  }\n`;\n\nconst FileList = styled.div`\n  display: flex;\n  gap: ${spacing.sm};\n`;\n\nconst FileLink = styled.a`\n  color: #1890ff;\n  font-size: 14px;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst ExpandableSection = styled(Section)`\n  background: #F5F5F5;\n  margin-bottom: ${spacing.md};\n  \n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: ${spacing.md} ${spacing.lg};\n    cursor: pointer;\n    background: white;\n    border-radius: ${borderRadius.medium};\n\n    .left-content {\n      display: flex;\n      align-items: center;\n      gap: ${spacing.md};\n\n      .chevron {\n        color: ${colors.text.secondary};\n        transition: transform 0.3s ease;\n        \n        &.expanded {\n          transform: rotate(180deg);\n        }\n      }\n    }\n\n    .title {\n      font-size: 16px;\n      font-weight: 500;\n      color: ${colors.text.primary};\n    }\n\n    .subtitle {\n      font-size: 12px;\n      color: ${colors.text.secondary};\n      margin-left: ${spacing.xs};\n    }\n  }\n`;\n\nconst ExpandedContent = styled.div`\n  padding: ${spacing.lg};\n  font-size: 14px;\n  background: #F5F5F5;\n  margin-top: ${spacing.xs};\n  border-radius: ${borderRadius.medium};\n`;\n\nconst ShipperInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${spacing.md};\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n\n  .form-label {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    font-size: 14px;\n    \n    .required {\n      color: #ff4d4f;\n    }\n  }\n\n  .ant-form-item {\n    margin-bottom: ${spacing.md};\n  }\n\n  .ant-input, .ant-select-selector, .ant-picker {\n    height: 40px;\n    border-radius: 2px;\n    \n    &::placeholder {\n      color: #bfbfbf;\n    }\n  }\n\n  .ant-select-selector {\n    padding: 4px 11px;\n    \n    .ant-select-selection-placeholder {\n      line-height: 30px;\n    }\n  }\n\n  .ant-radio-group {\n    display: flex;\n    gap: ${spacing.lg};\n  }\n\n  .phone-group {\n    display: flex;\n    gap: ${spacing.sm};\n\n    .country-code {\n      width: 120px;\n    }\n\n    .phone-input {\n      flex: 1;\n    }\n  }\n\n  .upload-section {\n    border: 1px dashed ${colors.border.default};\n    border-radius: 2px;\n    padding: ${spacing.lg};\n    text-align: center;\n    background: #fafafa;\n    cursor: pointer;\n\n    .upload-icon {\n      color: #1890ff;\n      font-size: 24px;\n      margin-bottom: ${spacing.xs};\n    }\n\n    .upload-text {\n      color: ${colors.text.secondary};\n      font-size: 14px;\n      margin-bottom: 4px;\n    }\n\n    .upload-hint {\n      color: ${colors.text.secondary};\n      font-size: 12px;\n    }\n  }\n`;\n\nconst ContainerInfo = styled.div`\n  .container-header {\n    background: white;\n    border-radius: ${borderRadius.medium};\n    padding: ${spacing.lg};\n    margin-bottom: ${spacing.md};\n    position: relative;\n\n    .info-group {\n      margin-bottom: ${spacing.md};\n\n      &:last-child {\n        margin-bottom: 0;\n      }\n\n      .label {\n        color: ${colors.text.secondary};\n        margin-bottom: 4px;\n        font-size: 14px;\n      }\n\n      .value {\n        color: ${colors.text.primary};\n        font-size: 14px;\n      }\n    }\n  }\n\n  .label {\n    color: ${colors.text.primary};\n    font-size: 14px;\n    margin: ${spacing.md} 0;\n  }\n\n  .product-list {\n    display: flex;\n    flex-direction: column;\n    gap: ${spacing.md};\n  }\n\n  .product-item {\n    background: white;\n    padding: ${spacing.lg};\n    border-radius: ${borderRadius.medium};\n    position: relative;\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: ${spacing.md} ${spacing.xl};\n\n    .item-detail {\n      font-size: 14px;\n      \n      .label {\n        color: ${colors.text.secondary};\n        margin-bottom: 4px;\n        margin: 0 0 4px 0;\n      }\n      \n      .value {\n        color: ${colors.text.primary};\n      }\n    }\n  }\n`;\n\nconst ContentEditButton = styled(Button)`\n  padding: 4px 8px;\n  height: auto;\n  color: ${colors.text.secondary};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  background: transparent;\n  position: relative;\n  z-index: 1;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.05);\n    color: ${colors.text.secondary};\n  }\n\n  .anticon {\n    font-size: 16px;\n  }\n`;\n\nconst OverviewCard = styled.div`\n  background: #F5F5F5;\n  border-radius: ${borderRadius.medium};\n  padding: ${spacing.md};\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: ${spacing.md};\n    padding-bottom: ${spacing.sm};\n    border-bottom: 1px solid ${colors.border.light};\n\n    .title {\n      font-size: 16px;\n      font-weight: 500;\n      color: ${colors.text.primary};\n    }\n  }\n\n  .content {\n    background: white;\n    border-radius: ${borderRadius.small};\n    padding: ${spacing.lg};\n\n    .info-row {\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n      gap: ${spacing.lg};\n      margin-bottom: ${spacing.md};\n\n      &:last-child {\n        margin-bottom: 0;\n      }\n\n      .info-item {\n        display: flex;\n        flex-direction: column;\n        gap: ${spacing.xs};\n        \n        .label {\n          color: ${colors.text.secondary};\n          font-size: 14px;\n        }\n\n        .value {\n          color: ${colors.text.primary};\n          font-size: 14px;\n          word-break: break-word;\n\n          &.highlight {\n            color: #1890ff;\n            font-weight: 500;\n          }\n\n          &.warning {\n            color: #ff4d4f;\n          }\n\n          &.success {\n            color: #52c41a;\n          }\n\n          .status-tag {\n            display: inline-flex;\n            align-items: center;\n            padding: 2px 8px;\n            border-radius: 4px;\n            font-size: 12px;\n            line-height: 1.5;\n            margin-left: ${spacing.sm};\n            background: #fff7e6;\n            color: #fa8c16;\n            border: 1px solid #ffd591;\n          }\n        }\n      }\n    }\n  }\n\n  .footer {\n    padding: ${spacing.lg};\n    background: white;\n    display: flex;\n    flex-direction: column;\n    gap: ${spacing.md};\n  }\n\n  .footer-title {\n    display: flex;\n    align-items: center;\n    gap: ${spacing.sm};\n    font-size: 14px;\n    color: ${colors.text.warning};\n\n    .anticon {\n      color: ${colors.status.warning};\n    }\n  }\n\n  .file-links {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: ${spacing.md};\n  }\n`;\n\nconst Footer = styled.div`\n  padding: ${spacing.lg};\n  background: white;\n  display: flex;\n  flex-direction: column;\n  gap: ${spacing.md};\n`;\n\nconst FooterTitle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.sm};\n  font-size: 14px;\n  color: ${colors.text.warning};\n\n  .anticon {\n    color: ${colors.status.warning};\n  }\n`;\n\nconst FileLinks = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${spacing.md};\n`;\n\nconst WarehouseInfo = styled.div`\n  .status-section {\n    background: white;\n    border-radius: ${borderRadius.medium};\n    padding: ${spacing.lg};\n    margin-bottom: ${spacing.md};\n\n    .section-title {\n      font-size: 14px;\n      font-weight: 500;\n      color: ${colors.text.primary};\n      margin-bottom: ${spacing.md};\n    }\n\n    .status-grid {\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n      gap: ${spacing.md};\n\n      .status-item {\n        display: flex;\n        flex-direction: column;\n        gap: ${spacing.xs};\n\n        .label {\n          color: ${colors.text.secondary};\n          font-size: 14px;\n        }\n\n        .value {\n          color: ${colors.text.primary};\n          font-size: 14px;\n\n          &.success {\n            color: #52c41a;\n          }\n\n          &.warning {\n            color: #fa8c16;\n          }\n\n          &.error {\n            color: #ff4d4f;\n          }\n        }\n      }\n    }\n  }\n\n  .timeline {\n    background: white;\n    border-radius: ${borderRadius.medium};\n    padding: ${spacing.lg};\n\n    .timeline-title {\n      font-size: 14px;\n      font-weight: 500;\n      color: ${colors.text.primary};\n      margin-bottom: ${spacing.md};\n    }\n\n    .timeline-item {\n      display: flex;\n      gap: ${spacing.md};\n      padding-bottom: ${spacing.md};\n      position: relative;\n\n      &:not(:last-child):before {\n        content: '';\n        position: absolute;\n        left: 6px;\n        top: 24px;\n        bottom: 0;\n        width: 1px;\n        background: ${colors.border.light};\n      }\n\n      .dot {\n        width: 12px;\n        height: 12px;\n        border-radius: 50%;\n        background: #1890ff;\n        margin-top: 6px;\n        flex-shrink: 0;\n\n        &.success {\n          background: #52c41a;\n        }\n\n        &.warning {\n          background: #fa8c16;\n        }\n\n        &.error {\n          background: #ff4d4f;\n        }\n      }\n\n      .content {\n        flex: 1;\n\n        .time {\n          font-size: 12px;\n          color: ${colors.text.secondary};\n          margin-bottom: 4px;\n        }\n\n        .text {\n          font-size: 14px;\n          color: ${colors.text.primary};\n        }\n      }\n    }\n  }\n`;\n\nconst TaxInfo = styled.div`\n  .tax-section {\n    background: white;\n    border-radius: ${borderRadius.medium};\n    padding: ${spacing.lg};\n    margin-bottom: ${spacing.md};\n\n    .section-title {\n      font-size: 14px;\n      font-weight: 500;\n      color: ${colors.text.primary};\n      margin-bottom: ${spacing.md};\n    }\n\n    .tax-grid {\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n      gap: ${spacing.md};\n\n      .tax-item {\n        display: flex;\n        flex-direction: column;\n        gap: ${spacing.xs};\n\n        .label {\n          color: ${colors.text.secondary};\n          font-size: 14px;\n        }\n\n        .value {\n          color: ${colors.text.primary};\n          font-size: 14px;\n\n          &.highlight {\n            color: #1890ff;\n            font-weight: 500;\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ShippingLabelModal = styled(Modal)`\n  @media print {\n    .ant-modal-header,\n    .action-buttons {\n      display: none !important;\n    }\n\n    .ant-modal-content {\n      box-shadow: none;\n    }\n\n    .ant-modal-body {\n      padding: 0;\n    }\n  }\n`;\n\nconst StyledCollapse = styled(Collapse)`\n  background: transparent !important;\n  border: none !important;\n  \n  .ant-collapse-item {\n    margin-bottom: ${spacing.md};\n    border: none !important;\n  }\n`;\n\nconst StyledPanel = styled(Panel)`\n  background: #F5F5F5 !important;\n  border-radius: ${borderRadius.medium} !important;\n  overflow: hidden !important;\n\n  .ant-collapse-header {\n    background: white !important;\n    border-radius: ${borderRadius.medium} !important;\n    padding: ${spacing.md} ${spacing.lg} !important;\n    align-items: center !important;\n    \n    .ant-collapse-expand-icon {\n      display: flex !important;\n      align-items: center !important;\n      justify-content: center !important;\n      color: ${colors.text.secondary} !important;\n    }\n    \n    .ant-collapse-header-text {\n      display: flex !important;\n      align-items: center !important;\n      gap: ${spacing.md} !important;\n      \n      .title {\n        font-size: 16px !important;\n        font-weight: 500 !important;\n        color: ${colors.text.primary} !important;\n      }\n      \n      .subtitle {\n        font-size: 12px !important;\n        color: ${colors.text.secondary} !important;\n      }\n    }\n  }\n\n  .ant-collapse-content {\n    background: #F5F5F5 !important;\n    border-top: none !important;\n    \n    .ant-collapse-content-box {\n      padding: ${spacing.lg} !important;\n    }\n  }\n`;\n\nconst StyledDescriptions = styled(Descriptions)`\n  .ant-descriptions-item-label {\n    color: ${colors.text.secondary};\n    font-size: 14px;\n  }\n  \n  .ant-descriptions-item-content {\n    color: ${colors.text.primary};\n    font-size: 14px;\n  }\n`;\n\nconst StyledCard = styled(Card)`\n  background: white;\n  border-radius: ${borderRadius.medium};\n  margin-bottom: ${spacing.md};\n  \n  .ant-card-head {\n    border-bottom: 1px solid ${colors.border.light};\n    padding: ${spacing.md} ${spacing.lg};\n    min-height: auto;\n    \n    .ant-card-head-title {\n      font-size: 14px;\n      font-weight: 500;\n      padding: ${spacing.xs} 0;\n    }\n  }\n  \n  .ant-card-body {\n    padding: ${spacing.lg};\n  }\n`;\n\nconst SectionTitle = styled(Title)`\n  font-size: 14px !important;\n  font-weight: 500 !important;\n  margin-bottom: ${spacing.md} !important;\n`;\n\nconst ProductItem = styled(Card)`\n  border-radius: ${borderRadius.medium};\n  margin-bottom: ${spacing.md};\n  overflow: hidden;\n  box-shadow: none;\n  transition: all 0.3s ease;\n  border: 1px solid ${colors.border.light};\n  background: #FFFFFF;\n  \n  .ant-card-body {\n    padding: ${spacing.lg};\n  }\n  \n  .product-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    margin-bottom: ${spacing.lg};\n    \n    .left-section {\n      display: flex;\n      flex-direction: column;\n      gap: ${spacing.xs};\n    }\n  }\n  \n  .product-title {\n    display: flex;\n    gap: ${spacing.sm};\n    align-items: center;\n    margin-bottom: ${spacing.xs};\n    \n    .product-id {\n      font-size: 16px;\n      color: ${colors.text.primary};\n      font-weight: 500;\n    }\n  }\n  \n  .name-group {\n    display: flex;\n    gap: ${spacing.lg};\n    align-items: center;\n    \n    .name-item {\n      display: flex;\n      gap: ${spacing.xs};\n      align-items: center;\n      \n      .label {\n        color: ${colors.text.secondary};\n        font-size: 14px;\n      }\n      \n      .value {\n        color: ${colors.text.primary};\n        font-size: 14px;\n      }\n    }\n  }\n  \n  .product-content {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: ${spacing.lg} ${spacing.xl};\n  }\n  \n  .info-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    \n    .label {\n      font-size: 14px;\n      color: ${colors.text.secondary};\n    }\n    \n    .value {\n      font-size: 14px;\n      color: ${colors.text.primary};\n      font-weight: 400;\n      \n      &.highlight {\n        color: #1890ff;\n      }\n    }\n  }\n  \n  .edit-button {\n    border: none;\n    padding: 4px;\n    height: auto;\n    color: ${colors.text.secondary};\n    \n    &:hover {\n      color: #1890ff;\n      background: transparent;\n    }\n  }\n`;\n\ninterface ShipperInfo {\n  shipperType: 'company' | 'individual';\n  companyName: string;\n  country: string;\n  city: string;\n  abn: string;\n  contactName: string;\n  countryCode: string;\n  phone: string;\n  address: string;\n  email: string;\n  expectedShipDate: string;\n  idDocument: string;\n}\n\ninterface ConsigneeInfo {\n  consigneeType: 'company' | 'individual';\n  companyName: string;\n  country: string;\n  city: string;\n  abn: string;\n  contactName: string;\n  countryCode: string;\n  phone: string;\n  address: string;\n  email: string;\n  notes: string;\n  idDocument: string;\n}\n\ninterface BookingDetailsProps {\n  bookingNumber: string;\n  onBack?: () => void;\n}\n\nconst BookingDetails: React.FC<BookingDetailsProps> = ({\n  bookingNumber = 'AU4363',\n  onBack,\n}) => {\n  const [expandedSections, setExpandedSections] = useState<string[]>([]);\n  const [isLabelModalVisible, setIsLabelModalVisible] = useState(false);\n  const barcodeRef = useRef<HTMLImageElement>(null);\n  const qrCodeRef = useRef<HTMLImageElement>(null);\n  const labelContentRef = useRef<HTMLDivElement>(null);\n  const [shipperModalVisible, setShipperModalVisible] = useState(false);\n  const [shipperInfo, setShipperInfo] = useState<ShipperInfo>({\n    shipperType: 'company',\n    companyName: '',\n    country: '澳大利亚',\n    city: '悉尼',\n    abn: '',\n    contactName: 'Mike Zhou',\n    countryCode: '+61',\n    phone: '0416222333',\n    address: '11 Archer St, Chatswood NSW 2067',\n    email: 'mikezhou@gmail.com',\n    expectedShipDate: '2024-11-12',\n    idDocument: '',\n  });\n  const [isShipperEditing, setIsShipperEditing] = useState(false);\n  const [consigneeInfo, setConsigneeInfo] = useState<ConsigneeInfo>({\n    consigneeType: 'individual',\n    companyName: '',\n    country: '澳大利亚',\n    city: '悉尼',\n    abn: '',\n    contactName: 'Mike Zhou',\n    countryCode: '+61',\n    phone: '0416222333',\n    address: '11 Archer St, Chatswood NSW 2067',\n    email: 'mikezhou@gmail.com',\n    notes: '日上午 查看',\n    idDocument: '',\n  });\n  const [isConsigneeEditing, setIsConsigneeEditing] = useState(false);\n  const [form] = Form.useForm();\n  const [consigneeForm] = Form.useForm();\n\n  useEffect(() => {\n    if (isLabelModalVisible) {\n      // Generate barcode\n      const barcodeElement = document.createElement('canvas');\n      JsBarcode(barcodeElement, 'AU1000888', {\n        format: 'CODE128',\n        width: 2,\n        height: 40,\n        displayValue: false,\n      });\n      if (barcodeRef.current) {\n        barcodeRef.current.src = barcodeElement.toDataURL();\n      }\n\n      // Generate QR code\n      const qrData = JSON.stringify({\n        bookingNumber: 'AU1000888',\n        consignee: 'HePinyu',\n        address: '25 Lombard St, FAIRFIELD NSW 2165',\n        phone: '0406222886',\n      });\n      QRCode.toDataURL(qrData, {\n        width: 120,\n        margin: 0,\n      }).then(url => {\n        if (qrCodeRef.current) {\n          qrCodeRef.current.src = url;\n        }\n      });\n    }\n  }, [isLabelModalVisible]);\n\n  // Initialize form when editing starts\n  useEffect(() => {\n    if (isShipperEditing) {\n      // Small timeout to ensure the form is mounted before setting values\n      setTimeout(() => {\n        form.setFieldsValue({\n          ...shipperInfo,\n          expectedShipDate: dayjs(shipperInfo.expectedShipDate)\n        });\n        console.log('Form initialized with shipperType:', shipperInfo.shipperType);\n      }, 10);\n    }\n  }, [isShipperEditing, shipperInfo, form]);\n\n  // Initialize consignee form when editing starts\n  useEffect(() => {\n    if (isConsigneeEditing) {\n      // Small timeout to ensure the form is mounted before setting values\n      setTimeout(() => {\n        consigneeForm.setFieldsValue({\n          ...consigneeInfo,\n        });\n        console.log('Consignee form initialized with consigneeType:', consigneeInfo.consigneeType);\n      }, 10);\n    }\n  }, [isConsigneeEditing, consigneeInfo, consigneeForm]);\n\n  const handleDownload = async () => {\n    if (!labelContentRef.current) return;\n\n    try {\n      // Hide header and buttons before capturing\n      const modalHeader = document.querySelector('.ant-modal-header');\n      const actionButtons = labelContentRef.current.querySelector('.action-buttons');\n      \n      if (modalHeader) {\n        modalHeader.classList.add('hidden');\n      }\n      if (actionButtons) {\n        actionButtons.classList.add('hidden');\n      }\n\n      const canvas = await html2canvas(labelContentRef.current, {\n        scale: 2, // Increase quality\n        backgroundColor: '#ffffff'\n      });\n      \n      // Show header and buttons after capturing\n      if (modalHeader) {\n        modalHeader.classList.remove('hidden');\n      }\n      if (actionButtons) {\n        actionButtons.classList.remove('hidden');\n      }\n\n      const dataUrl = canvas.toDataURL('image/png');\n      const link = document.createElement('a');\n      link.download = `shipping-label-${bookingNumber}.png`;\n      link.href = dataUrl;\n      link.click();\n      message.success('标签下载成功');\n    } catch (error) {\n      message.error('下载失败，请重试');\n    }\n  };\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  const handleSectionClick = (sectionKey: string) => {\n    setExpandedSections(prev => \n      prev.includes(sectionKey) \n        ? prev.filter(key => key !== sectionKey)\n        : [...prev, sectionKey]\n    );\n  };\n\n  const showLabelModal = () => {\n    setIsLabelModalVisible(true);\n  };\n\n  const handleLabelModalClose = () => {\n    setIsLabelModalVisible(false);\n  };\n\n  const handleFileSelect = (file: File | Blob) => {\n    // Handle file upload logic here\n    console.log('File selected:', file);\n  };\n\n  const handleEditShipper = () => {\n    setIsShipperEditing(true);\n  };\n\n  const handleCancelEdit = () => {\n    setIsShipperEditing(false);\n    form.resetFields();\n  };\n\n  const handleSaveShipper = async () => {\n    try {\n      const values = await form.validateFields();\n      const formattedValues = {\n        ...values,\n        expectedShipDate: values.expectedShipDate.format('YYYY-MM-DD')\n      };\n      setShipperInfo(formattedValues);\n      setIsShipperEditing(false);\n      message.success('发货方资料更新成功');\n    } catch (error) {\n      message.error('请检查表单填写是否正确');\n    }\n  };\n\n  // Add form field change handler\n  const handleFormValuesChange = (changedValues: any) => {\n    if ('shipperType' in changedValues) {\n      console.log('Shipper type changed to:', changedValues.shipperType);\n      \n      // Reset form fields when switching between company and individual\n      const commonFields = ['country', 'countryCode', 'phone', 'address', 'email', 'expectedShipDate'];\n      const currentValues = form.getFieldsValue();\n      \n      // Force re-render of form by setting shipperType first\n      form.setFieldsValue({\n        shipperType: changedValues.shipperType,\n      });\n      \n      // Then set common fields with a slight delay to ensure shipperType is applied first\n      setTimeout(() => {\n        form.setFieldsValue({\n          ...commonFields.reduce((acc, field) => ({ ...acc, [field]: currentValues[field] }), {}),\n        });\n      }, 10);\n    }\n  };\n\n  // Force re-render the form when shipperType changes\n  useEffect(() => {\n    if (isShipperEditing) {\n      const currentType = form.getFieldValue('shipperType');\n      form.setFieldsValue({ shipperType: currentType });\n    }\n  }, [form.getFieldValue('shipperType'), isShipperEditing]);\n\n  // Consignee handlers\n  const handleEditConsignee = () => {\n    setIsConsigneeEditing(true);\n  };\n\n  const handleCancelConsigneeEdit = () => {\n    setIsConsigneeEditing(false);\n    consigneeForm.resetFields();\n  };\n\n  const handleSaveConsignee = async () => {\n    try {\n      const values = await consigneeForm.validateFields();\n      setConsigneeInfo(values);\n      setIsConsigneeEditing(false);\n      message.success('收货方资料更新成功');\n    } catch (error) {\n      message.error('请检查表单填写是否正确');\n    }\n  };\n\n  // Add form field change handler for consignee form\n  const handleConsigneeFormValuesChange = (changedValues: any) => {\n    if ('consigneeType' in changedValues) {\n      console.log('Consignee type changed to:', changedValues.consigneeType);\n      \n      // Reset form fields when switching between company and individual\n      const commonFields = ['country', 'countryCode', 'phone', 'address', 'email', 'notes'];\n      const currentValues = consigneeForm.getFieldsValue();\n      \n      // Force re-render of form by setting consigneeType first\n      consigneeForm.setFieldsValue({\n        consigneeType: changedValues.consigneeType,\n      });\n      \n      // Then set common fields with a slight delay to ensure consigneeType is applied first\n      setTimeout(() => {\n        consigneeForm.setFieldsValue({\n          ...commonFields.reduce((acc, field) => ({ ...acc, [field]: currentValues[field] }), {}),\n        });\n      }, 10);\n    }\n  };\n\n  // Function to generate panel extra content (Edit button)\n  const renderPanelExtra = (onClick: () => void) => (\n    <Button\n      type=\"text\"\n      icon={<EditOutlined />}\n      onClick={(e) => {\n        e.stopPropagation();\n        onClick();\n      }}\n      style={{ marginRight: spacing.md }}\n    />\n  );\n\n  return (\n    <StyledLayout>\n      <GlobalHeader />\n      <ContentContainer>\n        <Breadcrumb>\n          <span>首页</span>\n          <span>{'>'}</span>\n          <span>哨头号 {bookingNumber}</span>\n          <span>{'>'}</span>\n          <span className=\"current\">查看详情</span>\n        </Breadcrumb>\n\n        <OverviewCard>\n          <div className=\"header\">\n            <span className=\"title\">委托信息总览</span>\n            <Button \n              type=\"primary\" \n              ghost \n              icon={<FileTextOutlined />}\n              onClick={showLabelModal}\n            >\n              查看哨头面单\n            </Button>\n          </div>\n          <div className=\"content\">\n            <div className=\"info-row\">\n              <div className=\"info-item\">\n                <span className=\"label\">货柜数</span>\n                <span className=\"value\">1</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"label\">总货值</span>\n                <span className=\"value\">35435{'\\n'}AUD</span>\n              </div>\n            </div>\n            <div className=\"info-row\">\n              <div className=\"info-item\">\n                <span className=\"label\">总箱数</span>\n                <span className=\"value\">32</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"label\">发货地</span>\n                <span className=\"value\">中国-郑州</span>\n              </div>\n            </div>\n            <div className=\"info-row\">\n              <div className=\"info-item\">\n                <span className=\"label\">已入库箱数</span>\n                <span className=\"value\">\n                  1\n                  <span className=\"status-tag\">待入库: 31</span>\n                </span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"label\">目的地港</span>\n                <span className=\"value\">澳大利亚-悉尼</span>\n              </div>\n            </div>\n            <div className=\"info-row\">\n              <div className=\"info-item\">\n                <span className=\"label\">总重量</span>\n                <span className=\"value\">31000 kg</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"label\">提交时间</span>\n                <span className=\"value\">2024/11/10 15:20</span>\n              </div>\n            </div>\n            <div className=\"info-row\">\n              <div className=\"info-item\">\n                <span className=\"label\">总体积</span>\n                <span className=\"value\">45 cbm</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"label\">预计发运日期</span>\n                <span className=\"value\">2024/11/12</span>\n              </div>\n            </div>\n          </div>\n          <Footer>\n            <FooterTitle>\n              <WarningOutlined />\n              请上传以下文件\n            </FooterTitle>\n            <FileLinks>\n              <FileUploadItem\n                label=\"装箱单\"\n                onFileSelect={handleFileSelect}\n              />\n              <FileUploadItem\n                label=\"发票\"\n                onFileSelect={handleFileSelect}\n              />\n              <FileUploadItem\n                label=\"报关单\"\n                onFileSelect={handleFileSelect}\n              />\n              <FileUploadItem\n                label=\"其他文件\"\n                onFileSelect={handleFileSelect}\n              />\n            </FileLinks>\n          </Footer>\n        </OverviewCard>\n\n        <StyledCollapse\n          expandIcon={({ isActive }) => (\n            <DownOutlined rotate={isActive ? 180 : 0} />\n          )}\n          activeKey={expandedSections}\n          onChange={(key) => setExpandedSections(key as string[])}\n        >\n          <StyledPanel \n            key=\"shipper\" \n            header={\n              <Space>\n                <span className=\"title\">发货方资料</span>\n                <Text type=\"secondary\" style={{ fontSize: 12 }}>（提交申请前必须添加发货方）</Text>\n              </Space>\n            }\n          >\n            {!isShipperEditing ? (\n              <>\n                <div style={{ position: 'relative' }}>\n                  <Button\n                    type=\"text\"\n                    icon={<EditOutlined />}\n                    onClick={handleEditShipper}\n                    style={{ position: 'absolute', top: 0, right: 0 }}\n                  />\n                  <StyledDescriptions \n                    column={1} \n                    bordered={false}\n                    colon={true}\n                    labelStyle={{ width: '150px' }}\n                  >\n                    <Descriptions.Item label=\"发货方类型\">\n                      {shipperInfo.shipperType === 'company' ? '公司' : '个人'}\n                    </Descriptions.Item>\n                    \n                    {shipperInfo.shipperType === 'company' && shipperInfo.companyName && (\n                      <>\n                        <Descriptions.Item label=\"公司名\">\n                          {shipperInfo.companyName}\n                        </Descriptions.Item>\n                        {shipperInfo.abn && (\n                          <Descriptions.Item label=\"公司ABN或税号\">\n                            {shipperInfo.abn}\n                          </Descriptions.Item>\n                        )}\n                      </>\n                    )}\n                    \n                    <Descriptions.Item label=\"国家\">{shipperInfo.country}</Descriptions.Item>\n                    <Descriptions.Item label=\"城市\">{shipperInfo.city}</Descriptions.Item>\n                    <Descriptions.Item label=\"联系人姓名\">{shipperInfo.contactName}</Descriptions.Item>\n                    <Descriptions.Item label=\"联系人电话\">\n                      {`${shipperInfo.countryCode} ${shipperInfo.phone}`}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"联系人地址\">{shipperInfo.address}</Descriptions.Item>\n                    <Descriptions.Item label=\"联系人邮箱\">{shipperInfo.email}</Descriptions.Item>\n                    <Descriptions.Item label=\"期望出货日期\">{shipperInfo.expectedShipDate}</Descriptions.Item>\n                  </StyledDescriptions>\n                </div>\n              </>\n            ) : (\n              <Form\n                form={form}\n                layout=\"vertical\"\n                initialValues={{\n                  ...shipperInfo,\n                  expectedShipDate: dayjs(shipperInfo.expectedShipDate)\n                }}\n                onValuesChange={handleFormValuesChange}\n              >\n                <Form.Item\n                  name=\"shipperType\"\n                  label={<span className=\"form-label\">\n                    <span className=\"required\">*</span>发货方类型\n                  </span>}\n                  rules={[{ required: true, message: '请选择发货方类型' }]}\n                >\n                  <Radio.Group onChange={(e) => {\n                    const value = e.target.value;\n                    form.setFieldsValue({ shipperType: value });\n                    console.log('Radio value changed to:', value);\n                  }}>\n                    <Radio value=\"company\">公司</Radio>\n                    <Radio value=\"individual\">个人</Radio>\n                  </Radio.Group>\n                </Form.Item>\n\n                <Form.Item noStyle dependencies={['shipperType']}>\n                  {({ getFieldValue }) => {\n                    const type = getFieldValue('shipperType');\n                    return type === 'company' ? (\n                      // Company Form Fields\n                      <>\n                        <Form.Item\n                          name=\"companyName\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>公司名\n                          </span>}\n                          rules={[{ required: true, message: '请输入公司名' }]}\n                        >\n                          <Input placeholder=\"公司名\" />\n                        </Form.Item>\n        \n                        <Form.Item\n                          name=\"country\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>国家\n                          </span>}\n                          rules={[{ required: true, message: '请选择国家' }]}\n                        >\n                          <Select placeholder=\"请选择\">\n                            <Option value=\"澳大利亚\">澳大利亚</Option>\n                            <Option value=\"中国\">中国</Option>\n                          </Select>\n                        </Form.Item>\n        \n                        <Form.Item\n                          name=\"city\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>城市\n                          </span>}\n                          rules={[{ required: true, message: '请选择城市' }]}\n                        >\n                          <Select placeholder=\"请选择\">\n                            <Option value=\"悉尼\">悉尼</Option>\n                            <Option value=\"墨尔本\">墨尔本</Option>\n                          </Select>\n                        </Form.Item>\n        \n                        <Form.Item\n                          name=\"abn\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>公司ABN或税号\n                          </span>}\n                          rules={[{ required: true, message: '请输入公司ABN或税号' }]}\n                        >\n                          <Input placeholder=\"公司ABN\" />\n                        </Form.Item>\n        \n                        <Form.Item\n                          name=\"contactName\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>联系人姓名\n                          </span>}\n                          rules={[{ required: true, message: '请输入联系人姓名' }]}\n                        >\n                          <Input placeholder=\"联系人姓名\" />\n                        </Form.Item>\n        \n                        <Form.Item\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>联系人电话\n                          </span>}\n                          required\n                        >\n                          <Input.Group compact className=\"phone-group\">\n                            <Form.Item\n                              name=\"countryCode\"\n                              noStyle\n                              rules={[{ required: true, message: '请选择国际区号' }]}\n                            >\n                              <Select placeholder=\"+61\" className=\"country-code\">\n                                <Option value=\"+61\">+61</Option>\n                                <Option value=\"+86\">+86</Option>\n                              </Select>\n                            </Form.Item>\n                            <Form.Item\n                              name=\"phone\"\n                              noStyle\n                              rules={[{ required: true, message: '请输入电话号码' }]}\n                            >\n                              <Input placeholder=\"电话\" className=\"phone-input\" />\n                            </Form.Item>\n                          </Input.Group>\n                        </Form.Item>\n        \n                        <Form.Item\n                          name=\"address\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>联系人地址\n                          </span>}\n                          rules={[{ required: true, message: '请输入联系人地址' }]}\n                        >\n                          <Input placeholder=\"发货人地址\" />\n                        </Form.Item>\n        \n                        <Form.Item\n                          name=\"email\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>联系人邮箱\n                          </span>}\n                          rules={[\n                            { required: true, message: '请输入联系人邮箱' },\n                            { type: 'email', message: '请输入有效的邮箱地址' }\n                          ]}\n                        >\n                          <Input placeholder=\"发货人邮箱\" />\n                        </Form.Item>\n                      </>\n                    ) : (\n                      // Individual Form Fields\n                      <>\n                        <Form.Item\n                          name=\"contactName\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>收货人姓名\n                          </span>}\n                          rules={[{ required: true, message: '请输入收货人姓名' }]}\n                        >\n                          <Input placeholder=\"收货人姓名\" />\n                        </Form.Item>\n        \n                        <Form.Item\n                          name=\"country\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>国家\n                          </span>}\n                          rules={[{ required: true, message: '请选择国家' }]}\n                        >\n                          <Select placeholder=\"请选择\">\n                            <Option value=\"澳大利亚\">澳大利亚</Option>\n                            <Option value=\"中国\">中国</Option>\n                          </Select>\n                        </Form.Item>\n        \n                        <Form.Item\n                          name=\"idDocument\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>收货人驾照或护照扫描件\n                          </span>}\n                          rules={[{ required: true, message: '请上传驾照或护照扫描件' }]}\n                        >\n                          <div className=\"upload-section\">\n                            <div className=\"upload-icon\">\n                              <InboxOutlined />\n                            </div>\n                            <div className=\"upload-text\">点击或者拖动文件到这区域来上传。</div>\n                            <div className=\"upload-hint\">支持.jpg .png .pdf等文件格式</div>\n                          </div>\n                        </Form.Item>\n        \n                        <Form.Item\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>收货人电话\n                          </span>}\n                          required\n                        >\n                          <Input.Group compact className=\"phone-group\">\n                            <Form.Item\n                              name=\"countryCode\"\n                              noStyle\n                              rules={[{ required: true, message: '请选择国际区号' }]}\n                            >\n                              <Select placeholder=\"+61\" className=\"country-code\">\n                                <Option value=\"+61\">+61</Option>\n                                <Option value=\"+86\">+86</Option>\n                              </Select>\n                            </Form.Item>\n                            <Form.Item\n                              name=\"phone\"\n                              noStyle\n                              rules={[{ required: true, message: '请输入电话号码' }]}\n                            >\n                              <Input placeholder=\"电话\" className=\"phone-input\" />\n                            </Form.Item>\n                          </Input.Group>\n                        </Form.Item>\n        \n                        <Form.Item\n                          name=\"address\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>收货人地址\n                          </span>}\n                          rules={[{ required: true, message: '请输入收货人地址' }]}\n                        >\n                          <Input placeholder=\"收货人地址\" />\n                        </Form.Item>\n        \n                        <Form.Item\n                          name=\"email\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>收货人邮箱\n                          </span>}\n                          rules={[\n                            { required: true, message: '请输入收货人邮箱' },\n                            { type: 'email', message: '请输入有效的邮箱地址' }\n                          ]}\n                        >\n                          <Input placeholder=\"收货人邮箱\" />\n                        </Form.Item>\n                      </>\n                    );\n                  }}\n                </Form.Item>\n\n                <Form.Item\n                  name=\"expectedShipDate\"\n                  label={<span className=\"form-label\">\n                    <span className=\"required\">*</span>期望出货日期\n                  </span>}\n                  rules={[{ required: true, message: '请选择期望出货日期' }]}\n                >\n                  <DatePicker placeholder=\"选择日期\" style={{ width: '100%' }} />\n                </Form.Item>\n\n                <Flex justify=\"flex-end\" gap={spacing.sm}>\n                  <Button onClick={handleCancelEdit}>取消</Button>\n                  <Button type=\"primary\" onClick={handleSaveShipper}>\n                    确认\n                  </Button>\n                </Flex>\n              </Form>\n            )}\n          </StyledPanel>\n\n          <StyledPanel \n            key=\"consignee\" \n            header={\n              <Space>\n                <span className=\"title\">收货方资料</span>\n                <Text type=\"secondary\" style={{ fontSize: 12 }}>（提交申请前必须添加收货方）</Text>\n              </Space>\n            }\n          >\n            {!isConsigneeEditing ? (\n              <>\n                <div style={{ position: 'relative' }}>\n                  <Button\n                    type=\"text\"\n                    icon={<EditOutlined />}\n                    onClick={handleEditConsignee}\n                    style={{ position: 'absolute', top: 0, right: 0 }}\n                  />\n                  <StyledDescriptions\n                    column={1} \n                    bordered={false}\n                    colon={true}\n                    labelStyle={{ width: '150px' }}\n                  >\n                    <Descriptions.Item label=\"收货方类型\">\n                      {consigneeInfo.consigneeType === 'company' ? '公司' : '个人'}\n                    </Descriptions.Item>\n                    \n                    {consigneeInfo.consigneeType === 'company' && consigneeInfo.companyName && (\n                      <>\n                        <Descriptions.Item label=\"公司名\">\n                          {consigneeInfo.companyName}\n                        </Descriptions.Item>\n                        {consigneeInfo.abn && (\n                          <Descriptions.Item label=\"公司ABN或税号\">\n                            {consigneeInfo.abn}\n                          </Descriptions.Item>\n                        )}\n                      </>\n                    )}\n                    \n                    <Descriptions.Item label=\"国家\">{consigneeInfo.country}</Descriptions.Item>\n                    {consigneeInfo.consigneeType === 'company' && (\n                      <Descriptions.Item label=\"城市\">{consigneeInfo.city}</Descriptions.Item>\n                    )}\n                    <Descriptions.Item label={consigneeInfo.consigneeType === 'company' ? '联系人姓名' : '收货人姓名'}>\n                      {consigneeInfo.contactName}\n                    </Descriptions.Item>\n                    <Descriptions.Item label={consigneeInfo.consigneeType === 'company' ? '联系人电话' : '收货人电话'}>\n                      {`${consigneeInfo.countryCode} ${consigneeInfo.phone}`}\n                    </Descriptions.Item>\n                    <Descriptions.Item label={consigneeInfo.consigneeType === 'company' ? '联系人地址' : '收货人地址'}>\n                      {consigneeInfo.address}\n                    </Descriptions.Item>\n                    <Descriptions.Item label={consigneeInfo.consigneeType === 'company' ? '联系人邮箱' : '收货人邮箱'}>\n                      {consigneeInfo.email}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"收货人注释\">{consigneeInfo.notes}</Descriptions.Item>\n                  </StyledDescriptions>\n                </div>\n              </>\n            ) : (\n              <Form\n                form={consigneeForm}\n                layout=\"vertical\"\n                initialValues={consigneeInfo}\n                onValuesChange={handleConsigneeFormValuesChange}\n              >\n                <Form.Item\n                  name=\"consigneeType\"\n                  label={<span className=\"form-label\">\n                    <span className=\"required\">*</span>收货方类型\n                  </span>}\n                  rules={[{ required: true, message: '请选择收货方类型' }]}\n                >\n                  <Radio.Group onChange={(e) => {\n                    const value = e.target.value;\n                    consigneeForm.setFieldsValue({ consigneeType: value });\n                    console.log('Radio value changed to:', value);\n                  }}>\n                    <Radio value=\"company\">公司</Radio>\n                    <Radio value=\"individual\">个人</Radio>\n                  </Radio.Group>\n                </Form.Item>\n\n                <Form.Item noStyle dependencies={['consigneeType']}>\n                  {({ getFieldValue }) => {\n                    const type = getFieldValue('consigneeType');\n                    return type === 'company' ? (\n                      // Company Form Fields\n                      <>\n                        <Form.Item\n                          name=\"companyName\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>公司名\n                          </span>}\n                          rules={[{ required: true, message: '请输入公司名' }]}\n                        >\n                          <Input placeholder=\"公司名\" />\n                        </Form.Item>\n            \n                        <Form.Item\n                          name=\"country\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>国家\n                          </span>}\n                          rules={[{ required: true, message: '请选择国家' }]}\n                        >\n                          <Select placeholder=\"请选择\">\n                            <Option value=\"澳大利亚\">澳大利亚</Option>\n                            <Option value=\"中国\">中国</Option>\n                          </Select>\n                        </Form.Item>\n            \n                        <Form.Item\n                          name=\"city\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>城市\n                          </span>}\n                          rules={[{ required: true, message: '请选择城市' }]}\n                        >\n                          <Select placeholder=\"请选择\">\n                            <Option value=\"悉尼\">悉尼</Option>\n                            <Option value=\"墨尔本\">墨尔本</Option>\n                          </Select>\n                        </Form.Item>\n            \n                        <Form.Item\n                          name=\"abn\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>公司ABN或税号\n                          </span>}\n                          rules={[{ required: true, message: '请输入公司ABN或税号' }]}\n                        >\n                          <Input placeholder=\"公司ABN\" />\n                        </Form.Item>\n            \n                        <Form.Item\n                          name=\"contactName\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>联系人姓名\n                          </span>}\n                          rules={[{ required: true, message: '请输入联系人姓名' }]}\n                        >\n                          <Input placeholder=\"联系人姓名\" />\n                        </Form.Item>\n            \n                        <Form.Item\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>联系人电话\n                          </span>}\n                          required\n                        >\n                          <Input.Group compact className=\"phone-group\">\n                            <Form.Item\n                              name=\"countryCode\"\n                              noStyle\n                              rules={[{ required: true, message: '请选择国际区号' }]}\n                            >\n                              <Select placeholder=\"+61\" className=\"country-code\">\n                                <Option value=\"+61\">+61</Option>\n                                <Option value=\"+86\">+86</Option>\n                              </Select>\n                            </Form.Item>\n                            <Form.Item\n                              name=\"phone\"\n                              noStyle\n                              rules={[{ required: true, message: '请输入电话号码' }]}\n                            >\n                              <Input placeholder=\"电话\" className=\"phone-input\" />\n                            </Form.Item>\n                          </Input.Group>\n                        </Form.Item>\n            \n                        <Form.Item\n                          name=\"address\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>联系人地址\n                          </span>}\n                          rules={[{ required: true, message: '请输入联系人地址' }]}\n                        >\n                          <Input placeholder=\"收货人地址\" />\n                        </Form.Item>\n            \n                        <Form.Item\n                          name=\"email\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>联系人邮箱\n                          </span>}\n                          rules={[\n                            { required: true, message: '请输入联系人邮箱' },\n                            { type: 'email', message: '请输入有效的邮箱地址' }\n                          ]}\n                        >\n                          <Input placeholder=\"收货人邮箱\" />\n                        </Form.Item>\n                      </>\n                    ) : (\n                      // Individual Form Fields\n                      <>\n                        <Form.Item\n                          name=\"contactName\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>收货人姓名\n                          </span>}\n                          rules={[{ required: true, message: '请输入收货人姓名' }]}\n                        >\n                          <Input placeholder=\"收货人姓名\" />\n                        </Form.Item>\n            \n                        <Form.Item\n                          name=\"country\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>国家\n                          </span>}\n                          rules={[{ required: true, message: '请选择国家' }]}\n                        >\n                          <Select placeholder=\"请选择\">\n                            <Option value=\"澳大利亚\">澳大利亚</Option>\n                            <Option value=\"中国\">中国</Option>\n                          </Select>\n                        </Form.Item>\n            \n                        <Form.Item\n                          name=\"idDocument\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>收货人驾照或护照扫描件\n                          </span>}\n                          rules={[{ required: true, message: '请上传驾照或护照扫描件' }]}\n                        >\n                          <div className=\"upload-section\">\n                            <div className=\"upload-icon\">\n                              <InboxOutlined />\n                            </div>\n                            <div className=\"upload-text\">点击或者拖动文件到这区域来上传。</div>\n                            <div className=\"upload-hint\">支持.jpg .png .pdf等文件格式</div>\n                          </div>\n                        </Form.Item>\n            \n                        <Form.Item\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>收货人电话\n                          </span>}\n                          required\n                        >\n                          <Input.Group compact className=\"phone-group\">\n                            <Form.Item\n                              name=\"countryCode\"\n                              noStyle\n                              rules={[{ required: true, message: '请选择国际区号' }]}\n                            >\n                              <Select placeholder=\"+61\" className=\"country-code\">\n                                <Option value=\"+61\">+61</Option>\n                                <Option value=\"+86\">+86</Option>\n                              </Select>\n                            </Form.Item>\n                            <Form.Item\n                              name=\"phone\"\n                              noStyle\n                              rules={[{ required: true, message: '请输入电话号码' }]}\n                            >\n                              <Input placeholder=\"电话\" className=\"phone-input\" />\n                            </Form.Item>\n                          </Input.Group>\n                        </Form.Item>\n            \n                        <Form.Item\n                          name=\"address\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>收货人地址\n                          </span>}\n                          rules={[{ required: true, message: '请输入收货人地址' }]}\n                        >\n                          <Input placeholder=\"收货人地址\" />\n                        </Form.Item>\n            \n                        <Form.Item\n                          name=\"email\"\n                          label={<span className=\"form-label\">\n                            <span className=\"required\">*</span>收货人邮箱\n                          </span>}\n                          rules={[\n                            { required: true, message: '请输入收货人邮箱' },\n                            { type: 'email', message: '请输入有效的邮箱地址' }\n                          ]}\n                        >\n                          <Input placeholder=\"收货人邮箱\" />\n                        </Form.Item>\n                      </>\n                    );\n                  }}\n                </Form.Item>\n\n                <Form.Item\n                  name=\"notes\"\n                  label={<span className=\"form-label\">\n                    收货人注释\n                  </span>}\n                >\n                  <Input.TextArea placeholder=\"收货人注释\" rows={2} />\n                </Form.Item>\n\n                <Flex justify=\"flex-end\" gap={spacing.sm}>\n                  <Button onClick={handleCancelConsigneeEdit}>取消</Button>\n                  <Button type=\"primary\" onClick={handleSaveConsignee}>\n                    确认\n                  </Button>\n                </Flex>\n              </Form>\n            )}\n          </StyledPanel>\n\n          <StyledPanel \n            key=\"container1\" \n            header={<span className=\"title\">货柜 1 信息</span>}\n          >\n            <StyledCard bordered={false}>\n              <Flex justify=\"space-between\" align=\"start\">\n                <StyledDescriptions column={1} bordered={false}>\n                  <Descriptions.Item label=\"柜型\">20 GP</Descriptions.Item>\n                  <Descriptions.Item label=\"货物总重(kg)\">16000</Descriptions.Item>\n                  <Descriptions.Item label=\"装柜地址\">河南省 郑州市 郑东新区空港区富航路7号</Descriptions.Item>\n                  <Descriptions.Item label=\"联系人\">张三</Descriptions.Item>\n                  <Descriptions.Item label=\"联系电话\">+86 13611112222</Descriptions.Item>\n                </StyledDescriptions>\n                <Button type=\"text\" icon={<EditOutlined />} />\n              </Flex>\n            </StyledCard>\n\n            <Divider style={{ margin: `${spacing.md} 0` }} />\n            \n            <SectionTitle level={5}>货柜1内商品信息（共 2 套商品）</SectionTitle>\n            \n            <List\n              itemLayout=\"vertical\"\n              dataSource={[\n                {\n                  name: '桌子',\n                  englishName: 'table',\n                  quantity: 10,\n                  packageCount: 2,\n                  material: '木质',\n                  volume: '32 立方米',\n                  price: '34 AUD',\n                  value: '340 AUD'\n                },\n                {\n                  name: '椅子',\n                  englishName: 'chair',\n                  quantity: 10,\n                  packageCount: 2,\n                  material: '木质',\n                  volume: '32 立方米',\n                  price: '34 AUD',\n                  value: '340 AUD'\n                }\n              ]}\n              renderItem={item => (\n                <ProductItem>\n                  <div className=\"product-header\">\n                    <div className=\"left-section\">\n                      <div className=\"product-title\">\n                        <span className=\"product-id\">商品 1</span>\n                      </div>\n                      <div className=\"name-group\">\n                        <div className=\"name-item\">\n                          <span className=\"label\">中文品名：</span>\n                          <span className=\"value\">{item.name}</span>\n                        </div>\n                        <div className=\"name-item\">\n                          <span className=\"label\">英文品名：</span>\n                          <span className=\"value\">{item.englishName}</span>\n                        </div>\n                      </div>\n                    </div>\n                    <Button \n                      className=\"edit-button\" \n                      type=\"text\" \n                      icon={<EditOutlined />} \n                      size=\"small\"\n                    />\n                  </div>\n                  <div className=\"product-content\">\n                    <div className=\"info-item\">\n                      <span className=\"label\">箱号</span>\n                      <span className=\"value\">12312ASA</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">箱数</span>\n                      <span className=\"value\">2</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">商品材质</span>\n                      <span className=\"value\">木质</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">货币</span>\n                      <span className=\"value\">AUD</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">商品套数</span>\n                      <span className=\"value\">10</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">重量(kg)</span>\n                      <span className=\"value\">1000</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">体积(cbm)</span>\n                      <span className=\"value\">32 立方米</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">单价</span>\n                      <span className=\"value highlight\">34 AUD</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">货值</span>\n                      <span className=\"value highlight\">340 AUD</span>\n                    </div>\n                  </div>\n                </ProductItem>\n              )}\n            />\n          </StyledPanel>\n\n          <StyledPanel \n            key=\"container2\" \n            header={<span className=\"title\">货柜 2 信息</span>}\n          >\n            <StyledCard bordered={false}>\n              <Flex justify=\"space-between\" align=\"start\">\n                <StyledDescriptions column={1} bordered={false}>\n                  <Descriptions.Item label=\"柜型\">20 GP</Descriptions.Item>\n                  <Descriptions.Item label=\"货物总重(kg)\">16000</Descriptions.Item>\n                  <Descriptions.Item label=\"装柜地址\">河南省 郑州市 郑东新区空港区富航路7号</Descriptions.Item>\n                  <Descriptions.Item label=\"联系人\">张三</Descriptions.Item>\n                  <Descriptions.Item label=\"联系电话\">+86 13611112222</Descriptions.Item>\n                </StyledDescriptions>\n                <Button type=\"text\" icon={<EditOutlined />} />\n              </Flex>\n            </StyledCard>\n\n            <Divider style={{ margin: `${spacing.md} 0` }} />\n            \n            <SectionTitle level={5}>货柜2内商品信息（共 2 套商品）</SectionTitle>\n            \n            <List\n              itemLayout=\"vertical\"\n              dataSource={[\n                {\n                  name: '桌子',\n                  englishName: 'table',\n                  quantity: 10,\n                  packageCount: 2,\n                  material: '木质',\n                  volume: '32 立方米',\n                  price: '34 AUD',\n                  value: '340 AUD'\n                },\n                {\n                  name: '椅子',\n                  englishName: 'chair',\n                  quantity: 10,\n                  packageCount: 2,\n                  material: '木质',\n                  volume: '32 立方米',\n                  price: '34 AUD',\n                  value: '340 AUD'\n                }\n              ]}\n              renderItem={item => (\n                <ProductItem>\n                  <div className=\"product-header\">\n                    <div className=\"left-section\">\n                      <div className=\"product-title\">\n                        <span className=\"product-id\">商品 1</span>\n                      </div>\n                      <div className=\"name-group\">\n                        <div className=\"name-item\">\n                          <span className=\"label\">中文品名：</span>\n                          <span className=\"value\">{item.name}</span>\n                        </div>\n                        <div className=\"name-item\">\n                          <span className=\"label\">英文品名：</span>\n                          <span className=\"value\">{item.englishName}</span>\n                        </div>\n                      </div>\n                    </div>\n                    <Button \n                      className=\"edit-button\" \n                      type=\"text\" \n                      icon={<EditOutlined />} \n                      size=\"small\"\n                    />\n                  </div>\n                  <div className=\"product-content\">\n                    <div className=\"info-item\">\n                      <span className=\"label\">箱号</span>\n                      <span className=\"value\">12312ASA</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">箱数</span>\n                      <span className=\"value\">2</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">商品材质</span>\n                      <span className=\"value\">木质</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">货币</span>\n                      <span className=\"value\">AUD</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">商品套数</span>\n                      <span className=\"value\">10</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">重量(kg)</span>\n                      <span className=\"value\">1000</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">体积(cbm)</span>\n                      <span className=\"value\">32 立方米</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">单价</span>\n                      <span className=\"value highlight\">34 AUD</span>\n                    </div>\n                    <div className=\"info-item\">\n                      <span className=\"label\">货值</span>\n                      <span className=\"value highlight\">340 AUD</span>\n                    </div>\n                  </div>\n                </ProductItem>\n              )}\n            />\n          </StyledPanel>\n\n          <StyledPanel \n            key=\"warehouse\" \n            header={<span className=\"title\">货物入库状态</span>}\n          >\n            <StyledCard \n              title=\"入库状态\" \n              bordered={false}\n            >\n              <Row gutter={[24, 16]}>\n                <Col span={12}>\n                  <Statistic \n                    title=\"总箱数\" \n                    value={32} \n                    valueStyle={{ fontSize: '16px' }}\n                  />\n                </Col>\n                <Col span={12}>\n                  <Statistic \n                    title=\"已入库箱数\" \n                    value={1} \n                    valueStyle={{ color: '#52c41a', fontSize: '16px' }}\n                  />\n                </Col>\n                <Col span={12}>\n                  <Statistic \n                    title=\"待入库箱数\" \n                    value={31} \n                    valueStyle={{ color: '#fa8c16', fontSize: '16px' }}\n                  />\n                </Col>\n                <Col span={12}>\n                  <Statistic \n                    title=\"入库异常箱数\" \n                    value={0} \n                    valueStyle={{ color: '#ff4d4f', fontSize: '16px' }}\n                  />\n                </Col>\n              </Row>\n            </StyledCard>\n            \n            <StyledCard \n              title=\"入库记录\" \n              bordered={false} \n              style={{ marginTop: spacing.md }}\n            >\n              <Timeline\n                items={[\n                  {\n                    dot: <Badge status=\"success\" />,\n                    children: (\n                      <>\n                        <Text type=\"secondary\" style={{ display: 'block', fontSize: '12px' }}>\n                          2024-01-15 14:30:00\n                        </Text>\n                        <Text>货物已入库 - 箱数：1</Text>\n                      </>\n                    ),\n                  },\n                  {\n                    children: (\n                      <>\n                        <Text type=\"secondary\" style={{ display: 'block', fontSize: '12px' }}>\n                          2024-01-15 10:20:00\n                        </Text>\n                        <Text>货物已到达仓库，等待入库</Text>\n                      </>\n                    ),\n                  },\n                  {\n                    children: (\n                      <>\n                        <Text type=\"secondary\" style={{ display: 'block', fontSize: '12px' }}>\n                          2024-01-14 16:45:00\n                        </Text>\n                        <Text>货物运输中</Text>\n                      </>\n                    ),\n                  },\n                ]}\n              />\n            </StyledCard>\n          </StyledPanel>\n\n          <StyledPanel \n            key=\"tax\" \n            header={<span className=\"title\">税单</span>}\n          >\n            <StyledCard \n              title=\"税费信息\" \n              bordered={false}\n            >\n              <Row gutter={[24, 16]}>\n                <Col span={12}>\n                  <Statistic \n                    title=\"商品总价值\" \n                    value={35435} \n                    suffix=\"AUD\"\n                    valueStyle={{ fontSize: '16px' }}\n                  />\n                </Col>\n                <Col span={12}>\n                  <Statistic \n                    title=\"GST税率\" \n                    value={10} \n                    suffix=\"%\"\n                    valueStyle={{ fontSize: '16px' }}\n                  />\n                </Col>\n                <Col span={12}>\n                  <Statistic \n                    title=\"应缴GST税费\" \n                    value={3543.50} \n                    suffix=\"AUD\"\n                    valueStyle={{ color: '#1890ff', fontWeight: 500, fontSize: '16px' }}\n                  />\n                </Col>\n                <Col span={12}>\n                  <Statistic \n                    title=\"关税税率\" \n                    value={5} \n                    suffix=\"%\"\n                    valueStyle={{ fontSize: '16px' }}\n                  />\n                </Col>\n                <Col span={12}>\n                  <Statistic \n                    title=\"应缴关税\" \n                    value={1771.75} \n                    suffix=\"AUD\"\n                    valueStyle={{ color: '#1890ff', fontWeight: 500, fontSize: '16px' }}\n                  />\n                </Col>\n                <Col span={12}>\n                  <Statistic \n                    title=\"总税费\" \n                    value={5315.25} \n                    suffix=\"AUD\"\n                    valueStyle={{ color: '#1890ff', fontWeight: 500, fontSize: '16px' }}\n                  />\n                </Col>\n              </Row>\n            </StyledCard>\n          </StyledPanel>\n        </StyledCollapse>\n\n      </ContentContainer>\n\n      <Modal\n        title=\"查看哨头面单\"\n        open={isLabelModalVisible}\n        onCancel={handleLabelModalClose}\n        footer={null}\n        width={450}\n        centered\n      >\n        <div ref={labelContentRef} className=\"shipping-label\">\n          <Card className=\"label-card\">\n            <div className=\"header-section\">\n              <div className=\"company-info\">\n                <img src=\"/logo.svg\" alt=\"Logo\" className=\"logo\" />\n                <Text className=\"company-name\">LogistiEXPRESS</Text>\n              </div>\n              <div className=\"barcode-container\">\n                <img ref={barcodeRef} alt=\"Barcode\" className=\"barcode\" />\n                <div className=\"code-info\">\n                  <Text className=\"tracking-number\">AU1000888</Text>\n                  <Text className=\"location-tag\">SYD</Text>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"content-section\">\n              <div className=\"section-title\">Consignee Information</div>\n              <div className=\"info-list\">\n                <Text>HePinyu</Text>\n                <br />\n                <Text>25 Lombard St</Text>\n                <br />\n                <Text>FAIRFIELD NSW 2165</Text>\n                <br />\n                <Text>Ph: 0406222886</Text>\n                <br />\n                <Text>ID: 100000</Text>\n              </div>\n\n              <div className=\"details-grid\">\n                <div className=\"detail-item\">\n                  <Text className=\"label\">PCS</Text>\n                  <Text className=\"value\">1</Text>\n                </div>\n                <div className=\"detail-item\">\n                  <Text className=\"label\">Dead weight</Text>\n                  <Text className=\"value\">14.25 kg</Text>\n                </div>\n                <div className=\"detail-item\">\n                  <Text className=\"label\">Originate</Text>\n                  <Text className=\"value\">CAN</Text>\n                </div>\n              </div>\n\n              <StyledDivider style={{ margin: `${spacing.md} 0` }} />\n\n              <div className=\"section-title\">Return Address</div>\n              <div className=\"info-list\">\n                <Text>56a ANZAC ST</Text>\n                <br />\n                <Text>Chullora NSW 2190</Text>\n              </div>\n            </div>\n\n            <div className=\"signature-section\">\n              <Row gutter={16}>\n                <Col span={12}>\n                  <div className=\"signature-box\">\n                    <div className=\"box-label\">Signature</div>\n                    <div className=\"signature-line\"></div>\n                  </div>\n                </Col>\n                <Col span={12}>\n                  <div className=\"signature-box\">\n                    <div className=\"box-label\">Delivery Date</div>\n                    <div className=\"signature-line\"></div>\n                  </div>\n                </Col>\n              </Row>\n            </div>\n\n            <div className=\"qr-section\">\n              <img ref={qrCodeRef} alt=\"QR Code\" className=\"qr-code\" />\n            </div>\n          </Card>\n\n          <Alert\n            message=\"请务必下载哨头面单，打印并贴于每件货物外箱；如缺哨头面单，将无法正常入仓。\"\n            type=\"warning\"\n            showIcon\n            className=\"warning-alert\"\n          />\n\n          <Text className=\"note-text\">\n            Attempt signature then ATL + 2 photos (NO ATL at Apartment or unit)\n          </Text>\n\n          <Flex className=\"action-buttons\" justify=\"space-between\">\n            <Button\n              type=\"primary\"\n              icon={<DownloadOutlined />}\n              onClick={handleDownload}\n            >\n              下载面单\n            </Button>\n            <Button\n              type=\"primary\"\n              icon={<PrinterOutlined />}\n              onClick={handlePrint}\n            >\n              打印面单\n            </Button>\n          </Flex>\n        </div>\n      </Modal>\n    </StyledLayout>\n  );\n};\n\nexport default BookingDetails;"],"names":[],"sourceRoot":""}