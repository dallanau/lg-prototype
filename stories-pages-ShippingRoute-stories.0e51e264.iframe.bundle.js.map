{"version":3,"file":"stories-pages-ShippingRoute-stories.0e51e264.iframe.bundle.js","mappings":";;;;;;AAcA;AACA;;;;;;AAQA;;;AAGA;;AAIA;;;;AAIA;;AAEA;;;AAKA;;;;AAIA;;;AAGA;;;AAKA;;;;;;AAMA;;;AAKA;;;;AAIA;;;;;;AAMA;ACjEA;;;AAGA;;AAIA;AACA;AAGA;;;;AAIA;AACA;;;;;AAKA;;;;AAIA;;AAIA;;;AAGA;AACA;AACA;;;;AAIA;AACA;;;AAGA;;;;;AAOA;AACA;;;;;;;;;;;AAWA;;;;;AAOA;;AAEA;;AAEA;;;;;;AAMA;;AAEA;;;;AC1DA","sources":["webpack://lg-prototype/./src/components/layout/GlobalHeader.tsx","webpack://lg-prototype/./src/pages/ShippingRoute.tsx","webpack://lg-prototype/"],"sourcesContent":["import React from 'react';\nimport { Typography, Button } from 'antd';\nimport { LeftOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { colors, spacing } from '../../styles/theme';\n\nconst { Title } = Typography;\n\nconst HeaderContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 100;\n  background: ${colors.background.default};\n`;\n\nconst StatusBar = styled.div`\n  height: 24px;\n  background: #333333;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 ${spacing.md};\n  font-size: 12px;\n  color: white;\n`;\n\nconst Header = styled.div`\n  height: 52px;\n  padding: ${spacing.sm} ${spacing.md};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${colors.border.light};\n  background: white;\n`;\n\nconst LeftSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.sm};\n\n  .back-button {\n    font-size: 20px;\n    color: ${colors.text.primary};\n    cursor: pointer;\n  }\n`;\n\nconst CenterSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.sm};\n\n  .logo {\n    height: 24px;\n    width: auto;\n  }\n`;\n\nconst RightSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.sm};\n\n  .language-select {\n    font-size: 14px;\n    color: ${colors.text.primary};\n    cursor: pointer;\n    border: none;\n    background: none;\n    padding: 0;\n  }\n`;\n\ninterface GlobalHeaderProps {\n  title?: string;\n  onBack?: () => void;\n}\n\nconst GlobalHeader: React.FC<GlobalHeaderProps> = ({ title, onBack }) => {\n  return (\n    <HeaderContainer>\n      <StatusBar>\n        <span>12:09</span>\n        <div style={{ display: 'flex', gap: '4px', alignItems: 'center' }}>\n          <span>􀙇</span>\n          <span>􀙈</span>\n          <span>24%</span>\n        </div>\n      </StatusBar>\n      <Header>\n        <LeftSection>\n          {onBack && <LeftOutlined className=\"back-button\" onClick={onBack} />}\n        </LeftSection>\n        <CenterSection>\n          <img src=\"/logo.svg\" alt=\"Logo\" className=\"logo\" />\n        </CenterSection>\n        <RightSection>\n          <button className=\"language-select\">中 (簡)</button>\n        </RightSection>\n      </Header>\n    </HeaderContainer>\n  );\n};\n\nexport default GlobalHeader; ","import React, { useState } from 'react';\nimport { Layout, Radio, Select, Space, Button, Typography } from 'antd';\nimport styled from 'styled-components';\nimport { colors, spacing, borderRadius, shadows } from '../styles/theme';\nimport GlobalHeader from '../components/layout/GlobalHeader';\n\nconst { Title } = Typography;\n\nconst StyledLayout = styled(Layout)`\n  background: ${colors.background.default};\n  min-height: 100vh;\n  width: 100%;\n`;\n\nconst ContentContainer = styled.div`\n  margin-top: 76px;\n  padding: ${spacing.md};\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: ${spacing.lg};\n\n  .label {\n    font-size: 14px;\n    color: ${colors.text.primary};\n    margin-bottom: ${spacing.sm};\n    display: flex;\n    align-items: center;\n\n    .required {\n      color: ${colors.status.error};\n      margin-right: 4px;\n    }\n  }\n`;\n\nconst StyledRadioGroup = styled(Radio.Group)`\n  display: flex;\n  gap: ${spacing.sm};\n\n  .ant-radio-wrapper {\n    border: 1px solid ${colors.border.light};\n    padding: ${spacing.sm} ${spacing.md};\n    border-radius: ${borderRadius.medium};\n    margin-right: 0;\n\n    &-checked {\n      border-color: ${colors.primary};\n      background: ${colors.background.blue};\n    }\n  }\n`;\n\nconst StyledSelect = styled(Select)`\n  width: 100%;\n\n  .ant-select-selector {\n    height: 44px !important;\n    padding: ${spacing.sm} ${spacing.md} !important;\n    border-radius: ${borderRadius.medium} !important;\n\n    .ant-select-selection-search-input {\n      height: 42px !important;\n    }\n\n    .ant-select-selection-placeholder,\n    .ant-select-selection-item {\n      line-height: 28px !important;\n    }\n  }\n`;\n\nconst BottomButtons = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: ${spacing.md};\n  background: white;\n  box-shadow: ${shadows.medium};\n  display: flex;\n  gap: ${spacing.md};\n\n  .ant-btn {\n    flex: 1;\n    height: 44px;\n    font-size: 16px;\n    border-radius: ${borderRadius.medium};\n  }\n`;\n\ninterface ShippingRouteProps {\n  onBack?: () => void;\n  onNext?: (values: any) => void;\n}\n\nconst ShippingRoute: React.FC<ShippingRouteProps> = ({ onBack, onNext }) => {\n  const [transportType, setTransportType] = useState<'sea' | 'air'>('sea');\n  const [route, setRoute] = useState<string>('中国大陆→澳大利亚');\n  const [departurePort, setDeparturePort] = useState<string>();\n  const [destinationPort, setDestinationPort] = useState<string>();\n\n  const handleNext = () => {\n    onNext?.({\n      transportType,\n      route,\n      departurePort,\n      destinationPort,\n    });\n  };\n\n  return (\n    <StyledLayout>\n      <GlobalHeader title=\"新增委托\" onBack={onBack} />\n\n      <ContentContainer>\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>海运/空运</span>\n          </div>\n          <StyledRadioGroup \n            value={transportType}\n            onChange={e => setTransportType(e.target.value)}\n          >\n            <Radio value=\"sea\">海运</Radio>\n            <Radio value=\"air\">空运</Radio>\n          </StyledRadioGroup>\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">物流线路</div>\n          <StyledSelect\n            value={route}\n            onChange={(value) => setRoute(value as string)}\n          >\n            <Select.Option value=\"中国大陆→澳大利亚\">中国大陆→澳大利亚</Select.Option>\n          </StyledSelect>\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">起运港</div>\n          <StyledSelect\n            value={departurePort}\n            onChange={(value) => setDeparturePort(value as string)}\n            placeholder=\"请选择\"\n          >\n            <Select.Option value=\"port1\">青岛港</Select.Option>\n            <Select.Option value=\"port2\">上海港</Select.Option>\n            <Select.Option value=\"port3\">深圳港</Select.Option>\n          </StyledSelect>\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">目的地港</div>\n          <StyledSelect\n            value={destinationPort}\n            onChange={(value) => setDestinationPort(value as string)}\n            placeholder=\"请选择\"\n          >\n            <Select.Option value=\"port1\">悉尼港</Select.Option>\n            <Select.Option value=\"port2\">墨尔本港</Select.Option>\n            <Select.Option value=\"port3\">布里斯班港</Select.Option>\n          </StyledSelect>\n        </FormGroup>\n      </ContentContainer>\n\n      <BottomButtons>\n        <Button onClick={onBack}>上一步</Button>\n        <Button type=\"primary\" onClick={handleNext}>下一步</Button>\n      </BottomButtons>\n    </StyledLayout>\n  );\n};\n\nexport default ShippingRoute; "],"names":[],"sourceRoot":""}