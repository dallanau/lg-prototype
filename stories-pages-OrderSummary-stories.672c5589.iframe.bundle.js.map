{"version":3,"file":"stories-pages-OrderSummary-stories.672c5589.iframe.bundle.js","mappings":";;;;;;AAcA;AACA;;;;;;AAQA;;;AAGA;;AAIA;;;;AAIA;;AAEA;;;AAKA;;;;AAIA;;;AAGA;;;AAKA;;;;;;AAMA;;;AAKA;;;;AAIA;;;;;;AAMA;AChEA;;;AAkDA;;;;;;AAvCA;AACA;;;;;;AAQA;;;AAGA;;AAIA;;;;AAIA;;;;;AAKA;;;;;;;AAOA;;;;;;;AAOA;;AAIA;;AAEA;AAGA;AACA;AACA;AACA;;;;;AAKA;AACA;;AAEA;;;AAKA;;;;AAIA;;;;AAIA;;;AAGA;;AAIA;AACA;AACA;;;;;AAKA;AACA;;AAEA;;;;;AAOA;;AAEA;;AAEA;;;;;;AAMA;;AAEA;;AAIA;;;;;AAKA;;;;;AAKA;;AAEA;;;;;;;AAOA;;;;;;AAMA;;AAEA;;;;;AAKA;;;AAGA;;;;ACxIA","sources":["webpack://lg-prototype/./src/components/layout/GlobalHeader.tsx","webpack://lg-prototype/./src/pages/OrderSummary.tsx","webpack://lg-prototype/"],"sourcesContent":["import React from 'react';\nimport { Typography, Button } from 'antd';\nimport { LeftOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { colors, spacing } from '../../styles/theme';\n\nconst { Title } = Typography;\n\nconst HeaderContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 100;\n  background: ${colors.background.default};\n`;\n\nconst StatusBar = styled.div`\n  height: 24px;\n  background: #333333;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 ${spacing.md};\n  font-size: 12px;\n  color: white;\n`;\n\nconst Header = styled.div`\n  height: 52px;\n  padding: ${spacing.sm} ${spacing.md};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${colors.border.light};\n  background: white;\n`;\n\nconst LeftSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.sm};\n\n  .back-button {\n    font-size: 20px;\n    color: ${colors.text.primary};\n    cursor: pointer;\n  }\n`;\n\nconst CenterSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.sm};\n\n  .logo {\n    height: 24px;\n    width: auto;\n  }\n`;\n\nconst RightSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.sm};\n\n  .language-select {\n    font-size: 14px;\n    color: ${colors.text.primary};\n    cursor: pointer;\n    border: none;\n    background: none;\n    padding: 0;\n  }\n`;\n\ninterface GlobalHeaderProps {\n  title?: string;\n  onBack?: () => void;\n}\n\nconst GlobalHeader: React.FC<GlobalHeaderProps> = ({ title, onBack }) => {\n  return (\n    <HeaderContainer>\n      <StatusBar>\n        <span>12:09</span>\n        <div style={{ display: 'flex', gap: '4px', alignItems: 'center' }}>\n          <span>􀙇</span>\n          <span>􀙈</span>\n          <span>24%</span>\n        </div>\n      </StatusBar>\n      <Header>\n        <LeftSection>\n          {onBack && <LeftOutlined className=\"back-button\" onClick={onBack} />}\n        </LeftSection>\n        <CenterSection>\n          <img src=\"/logo.svg\" alt=\"Logo\" className=\"logo\" />\n        </CenterSection>\n        <RightSection>\n          <button className=\"language-select\">中 (簡)</button>\n        </RightSection>\n      </Header>\n    </HeaderContainer>\n  );\n};\n\nexport default GlobalHeader; ","import React, { useState } from 'react';\nimport { Layout, Button, Typography, Modal } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { colors, spacing, borderRadius, shadows } from '../styles/theme';\nimport GlobalHeader from '../components/layout/GlobalHeader';\n\nconst { Text } = Typography;\n\nconst StyledLayout = styled(Layout)`\n  background: ${colors.background.default};\n  min-height: 100vh;\n  width: 100%;\n`;\n\nconst HeaderContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 100;\n  background: ${colors.background.default};\n`;\n\nconst StatusBar = styled.div`\n  height: 24px;\n  background: #333333;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 ${spacing.md};\n  font-size: 12px;\n  color: white;\n`;\n\nconst Header = styled.div`\n  height: 52px;\n  padding: ${spacing.sm} ${spacing.md};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${colors.border.light};\n  background: white;\n\n  .back-button {\n    font-size: 20px;\n    color: ${colors.text.primary};\n    cursor: pointer;\n  }\n\n  .title {\n    font-size: 16px;\n    font-weight: 500;\n    color: ${colors.text.primary};\n    margin: 0;\n  }\n\n  .right-space {\n    width: 20px;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  margin-top: 76px;\n  padding: ${spacing.md};\n  padding-bottom: 120px;\n`;\n\nconst SummarySection = styled.div`\n  background: ${colors.background.light};\n  border-radius: ${borderRadius.medium};\n  padding: ${spacing.md};\n  margin-bottom: ${spacing.lg};\n\n  .section-title {\n    font-size: 16px;\n    font-weight: 500;\n    color: ${colors.text.primary};\n    margin-bottom: ${spacing.md};\n  }\n`;\n\nconst DetailItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${spacing.sm};\n  font-size: 14px;\n\n  .label {\n    color: ${colors.text.secondary};\n  }\n\n  .value {\n    color: ${colors.text.primary};\n    text-align: right;\n  }\n`;\n\nconst CargoCard = styled.div`\n  background: white;\n  border-radius: ${borderRadius.medium};\n  padding: ${spacing.md};\n  margin-bottom: ${spacing.md};\n\n  .card-title {\n    font-size: 14px;\n    font-weight: 500;\n    color: ${colors.text.primary};\n    margin-bottom: ${spacing.md};\n  }\n`;\n\nconst BottomButtons = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: ${spacing.md};\n  background: white;\n  box-shadow: ${shadows.medium};\n  display: flex;\n  gap: ${spacing.md};\n\n  .ant-btn {\n    flex: 1;\n    height: 44px;\n    font-size: 16px;\n    border-radius: ${borderRadius.medium};\n  }\n`;\n\nconst StyledModal = styled(Modal)`\n  .ant-modal-content {\n    border-radius: ${borderRadius.medium};\n    padding: 0;\n  }\n\n  .ant-modal-body {\n    padding: ${spacing.xl} ${spacing.lg};\n    text-align: center;\n  }\n\n  .ant-modal-footer {\n    padding: ${spacing.md};\n    display: flex;\n    gap: ${spacing.md};\n    border-top: none;\n\n    .ant-btn {\n      flex: 1;\n      height: 44px;\n      font-size: 16px;\n      border-radius: ${borderRadius.medium};\n      margin: 0;\n    }\n  }\n\n  .modal-icon {\n    color: ${colors.primary};\n    font-size: 24px;\n    margin-bottom: ${spacing.md};\n  }\n\n  .modal-text {\n    font-size: 16px;\n    color: ${colors.text.primary};\n    margin: 0;\n  }\n`;\n\ninterface OrderSummaryProps {\n  onBack?: () => void;\n  onNext?: () => void;\n  data?: {\n    basicInfo: {\n      transportType: string;\n      route: string;\n      departurePort: string;\n      destinationPort: string;\n    };\n    cargoInfo: {\n      containerType: string;\n      cargoType: string;\n      weight: string;\n      dimensions: string;\n      hasWarehouse: boolean;\n      warehouseAddress?: string;\n      contact?: string;\n      phone?: string;\n    }[];\n  };\n}\n\nconst OrderSummary: React.FC<OrderSummaryProps> = ({ onBack, onNext, data }) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const defaultData = {\n    basicInfo: {\n      transportType: '海运',\n      route: '中国大陆→澳大利亚',\n      departurePort: '连云港',\n      destinationPort: '悉尼',\n    },\n    cargoInfo: [\n      {\n        containerType: '整柜',\n        cargoType: '普通货物',\n        weight: '1000',\n        dimensions: '20',\n        hasWarehouse: true,\n        warehouseAddress: '上海市浦东新区XX路XX号',\n        contact: '张三',\n        phone: '+86 13800138000',\n      },\n    ],\n  };\n\n  const summaryData = data || defaultData;\n\n  const handleNextClick = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleModalConfirm = () => {\n    setIsModalVisible(false);\n    onNext?.();\n  };\n\n  const handleModalCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <StyledLayout>\n      <GlobalHeader title=\"新增委托\" onBack={onBack} />\n\n      <ContentContainer>\n        <SummarySection>\n          <div className=\"section-title\">基本委托信息</div>\n          <DetailItem>\n            <span className=\"label\">运输方式：</span>\n            <span className=\"value\">{summaryData.basicInfo.transportType}</span>\n          </DetailItem>\n          <DetailItem>\n            <span className=\"label\">物流线路：</span>\n            <span className=\"value\">{summaryData.basicInfo.route}</span>\n          </DetailItem>\n          <DetailItem>\n            <span className=\"label\">起运港：</span>\n            <span className=\"value\">{summaryData.basicInfo.departurePort}</span>\n          </DetailItem>\n          <DetailItem>\n            <span className=\"label\">目的地港：</span>\n            <span className=\"value\">{summaryData.basicInfo.destinationPort}</span>\n          </DetailItem>\n        </SummarySection>\n\n        <SummarySection>\n          <div className=\"section-title\">商品信息</div>\n          {summaryData.cargoInfo.map((cargo, index) => (\n            <CargoCard key={index}>\n              <div className=\"card-title\">货柜 {index + 1}</div>\n              <DetailItem>\n                <span className=\"label\">柜型选择</span>\n                <span className=\"value\">{cargo.containerType}</span>\n              </DetailItem>\n              <DetailItem>\n                <span className=\"label\">货物类型</span>\n                <span className=\"value\">{cargo.cargoType}</span>\n              </DetailItem>\n              <DetailItem>\n                <span className=\"label\">货物总重量(kg)</span>\n                <span className=\"value\">{cargo.weight}</span>\n              </DetailItem>\n              <DetailItem>\n                <span className=\"label\">货物总尺寸(cbm)</span>\n                <span className=\"value\">{cargo.dimensions}</span>\n              </DetailItem>\n              {cargo.hasWarehouse && (\n                <>\n                  <DetailItem>\n                    <span className=\"label\">上门装柜：</span>\n                    <span className=\"value\">是</span>\n                  </DetailItem>\n                  <DetailItem>\n                    <span className=\"label\">装柜地址：</span>\n                    <span className=\"value\">{cargo.warehouseAddress}</span>\n                  </DetailItem>\n                  <DetailItem>\n                    <span className=\"label\">联系人</span>\n                    <span className=\"value\">{cargo.contact}</span>\n                  </DetailItem>\n                  <DetailItem>\n                    <span className=\"label\">联系人电话</span>\n                    <span className=\"value\">{cargo.phone}</span>\n                  </DetailItem>\n                </>\n              )}\n            </CargoCard>\n          ))}\n        </SummarySection>\n      </ContentContainer>\n\n      <BottomButtons>\n        <Button onClick={onBack}>上一步</Button>\n        <Button type=\"primary\" onClick={handleNextClick}>下一步</Button>\n      </BottomButtons>\n\n      <StyledModal\n        visible={isModalVisible}\n        onOk={handleModalConfirm}\n        onCancel={handleModalCancel}\n        footer={[\n          <Button key=\"cancel\" onClick={handleModalCancel}>否</Button>,\n          <Button key=\"confirm\" type=\"primary\" onClick={handleModalConfirm}>是</Button>,\n        ]}\n        centered\n        closable={false}\n        width={320}\n      >\n        <InfoCircleOutlined className=\"modal-icon\" />\n        <p className=\"modal-text\">即将创建订舱头号，是否确认？</p>\n      </StyledModal>\n    </StyledLayout>\n  );\n};\n\nexport default OrderSummary; "],"names":[],"sourceRoot":""}