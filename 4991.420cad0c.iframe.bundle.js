"use strict";(self.webpackChunklg_prototype=self.webpackChunklg_prototype||[]).push([[4991],{"./node_modules/antd/es/grid/style/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{L3:()=>useRowStyle,i4:()=>getMediaSize,xV:()=>useColStyle});var _ant_design_cssinjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@ant-design/cssinjs/es/index.js"),_theme_internal__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/antd/es/theme/util/genStyleUtils.js"),_theme_internal__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@ant-design/cssinjs-utils/es/index.js");const genGridColStyle=token=>{const{componentCls}=token;return{[componentCls]:{position:"relative",maxWidth:"100%",minHeight:1}}},genGridStyle=(token,sizeCls)=>((token,sizeCls)=>{const{prefixCls,componentCls,gridColumns}=token,gridColumnsStyle={};for(let i=gridColumns;i>=0;i--)0===i?(gridColumnsStyle[`${componentCls}${sizeCls}-${i}`]={display:"none"},gridColumnsStyle[`${componentCls}-push-${i}`]={insetInlineStart:"auto"},gridColumnsStyle[`${componentCls}-pull-${i}`]={insetInlineEnd:"auto"},gridColumnsStyle[`${componentCls}${sizeCls}-push-${i}`]={insetInlineStart:"auto"},gridColumnsStyle[`${componentCls}${sizeCls}-pull-${i}`]={insetInlineEnd:"auto"},gridColumnsStyle[`${componentCls}${sizeCls}-offset-${i}`]={marginInlineStart:0},gridColumnsStyle[`${componentCls}${sizeCls}-order-${i}`]={order:0}):(gridColumnsStyle[`${componentCls}${sizeCls}-${i}`]=[{"--ant-display":"block",display:"block"},{display:"var(--ant-display)",flex:`0 0 ${i/gridColumns*100}%`,maxWidth:i/gridColumns*100+"%"}],gridColumnsStyle[`${componentCls}${sizeCls}-push-${i}`]={insetInlineStart:i/gridColumns*100+"%"},gridColumnsStyle[`${componentCls}${sizeCls}-pull-${i}`]={insetInlineEnd:i/gridColumns*100+"%"},gridColumnsStyle[`${componentCls}${sizeCls}-offset-${i}`]={marginInlineStart:i/gridColumns*100+"%"},gridColumnsStyle[`${componentCls}${sizeCls}-order-${i}`]={order:i});return gridColumnsStyle[`${componentCls}${sizeCls}-flex`]={flex:`var(--${prefixCls}${sizeCls}-flex)`},gridColumnsStyle})(token,sizeCls),useRowStyle=(0,_theme_internal__WEBPACK_IMPORTED_MODULE_1__.OF)("Grid",(token=>{const{componentCls}=token;return{[componentCls]:{display:"flex",flexFlow:"row wrap",minWidth:0,"&::before, &::after":{display:"flex"},"&-no-wrap":{flexWrap:"nowrap"},"&-start":{justifyContent:"flex-start"},"&-center":{justifyContent:"center"},"&-end":{justifyContent:"flex-end"},"&-space-between":{justifyContent:"space-between"},"&-space-around":{justifyContent:"space-around"},"&-space-evenly":{justifyContent:"space-evenly"},"&-top":{alignItems:"flex-start"},"&-middle":{alignItems:"center"},"&-bottom":{alignItems:"flex-end"}}}}),(()=>({}))),getMediaSize=token=>({xs:token.screenXSMin,sm:token.screenSMMin,md:token.screenMDMin,lg:token.screenLGMin,xl:token.screenXLMin,xxl:token.screenXXLMin}),useColStyle=(0,_theme_internal__WEBPACK_IMPORTED_MODULE_1__.OF)("Grid",(token=>{const gridToken=(0,_theme_internal__WEBPACK_IMPORTED_MODULE_2__.oX)(token,{gridColumns:24}),gridMediaSizesMap=getMediaSize(gridToken);return delete gridMediaSizesMap.xs,[genGridColStyle(gridToken),genGridStyle(gridToken,""),genGridStyle(gridToken,"-xs"),Object.keys(gridMediaSizesMap).map((key=>((token,screenSize,sizeCls)=>({[`@media (min-width: ${(0,_ant_design_cssinjs__WEBPACK_IMPORTED_MODULE_0__.zA)(screenSize)})`]:Object.assign({},genGridStyle(token,sizeCls))}))(gridToken,gridMediaSizesMap[key],`-${key}`))).reduce(((pre,cur)=>Object.assign(Object.assign({},pre),cur)),{})]}),(()=>({})))},"./node_modules/antd/es/skeleton/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>skeleton});var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),context=__webpack_require__("./node_modules/antd/es/config-provider/context.js"),omit=__webpack_require__("./node_modules/rc-util/es/omit.js");const skeleton_Element=props=>{const{prefixCls,className,style,size,shape}=props,sizeCls=classnames_default()({[`${prefixCls}-lg`]:"large"===size,[`${prefixCls}-sm`]:"small"===size}),shapeCls=classnames_default()({[`${prefixCls}-circle`]:"circle"===shape,[`${prefixCls}-square`]:"square"===shape,[`${prefixCls}-round`]:"round"===shape}),sizeStyle=react.useMemo((()=>"number"==typeof size?{width:size,height:size,lineHeight:`${size}px`}:{}),[size]);return react.createElement("span",{className:classnames_default()(prefixCls,sizeCls,shapeCls,className),style:Object.assign(Object.assign({},sizeStyle),style)})};var es=__webpack_require__("./node_modules/@ant-design/cssinjs/es/index.js"),genStyleUtils=__webpack_require__("./node_modules/antd/es/theme/util/genStyleUtils.js"),cssinjs_utils_es=__webpack_require__("./node_modules/@ant-design/cssinjs-utils/es/index.js");const skeletonClsLoading=new es.Mo("ant-skeleton-loading",{"0%":{backgroundPosition:"100% 50%"},"100%":{backgroundPosition:"0 50%"}}),genSkeletonElementCommonSize=size=>({height:size,lineHeight:(0,es.zA)(size)}),genSkeletonElementAvatarSize=size=>Object.assign({width:size},genSkeletonElementCommonSize(size)),genSkeletonColor=token=>({background:token.skeletonLoadingBackground,backgroundSize:"400% 100%",animationName:skeletonClsLoading,animationDuration:token.skeletonLoadingMotionDuration,animationTimingFunction:"ease",animationIterationCount:"infinite"}),genSkeletonElementInputSize=(size,calc)=>Object.assign({width:calc(size).mul(5).equal(),minWidth:calc(size).mul(5).equal()},genSkeletonElementCommonSize(size)),genSkeletonElementAvatar=token=>{const{skeletonAvatarCls,gradientFromColor,controlHeight,controlHeightLG,controlHeightSM}=token;return{[skeletonAvatarCls]:Object.assign({display:"inline-block",verticalAlign:"top",background:gradientFromColor},genSkeletonElementAvatarSize(controlHeight)),[`${skeletonAvatarCls}${skeletonAvatarCls}-circle`]:{borderRadius:"50%"},[`${skeletonAvatarCls}${skeletonAvatarCls}-lg`]:Object.assign({},genSkeletonElementAvatarSize(controlHeightLG)),[`${skeletonAvatarCls}${skeletonAvatarCls}-sm`]:Object.assign({},genSkeletonElementAvatarSize(controlHeightSM))}},genSkeletonElementInput=token=>{const{controlHeight,borderRadiusSM,skeletonInputCls,controlHeightLG,controlHeightSM,gradientFromColor,calc}=token;return{[skeletonInputCls]:Object.assign({display:"inline-block",verticalAlign:"top",background:gradientFromColor,borderRadius:borderRadiusSM},genSkeletonElementInputSize(controlHeight,calc)),[`${skeletonInputCls}-lg`]:Object.assign({},genSkeletonElementInputSize(controlHeightLG,calc)),[`${skeletonInputCls}-sm`]:Object.assign({},genSkeletonElementInputSize(controlHeightSM,calc))}},genSkeletonElementImageSize=size=>Object.assign({width:size},genSkeletonElementCommonSize(size)),genSkeletonElementImage=token=>{const{skeletonImageCls,imageSizeBase,gradientFromColor,borderRadiusSM,calc}=token;return{[skeletonImageCls]:Object.assign(Object.assign({display:"inline-flex",alignItems:"center",justifyContent:"center",verticalAlign:"middle",background:gradientFromColor,borderRadius:borderRadiusSM},genSkeletonElementImageSize(calc(imageSizeBase).mul(2).equal())),{[`${skeletonImageCls}-path`]:{fill:"#bfbfbf"},[`${skeletonImageCls}-svg`]:Object.assign(Object.assign({},genSkeletonElementImageSize(imageSizeBase)),{maxWidth:calc(imageSizeBase).mul(4).equal(),maxHeight:calc(imageSizeBase).mul(4).equal()}),[`${skeletonImageCls}-svg${skeletonImageCls}-svg-circle`]:{borderRadius:"50%"}}),[`${skeletonImageCls}${skeletonImageCls}-circle`]:{borderRadius:"50%"}}},genSkeletonElementButtonShape=(token,size,buttonCls)=>{const{skeletonButtonCls}=token;return{[`${buttonCls}${skeletonButtonCls}-circle`]:{width:size,minWidth:size,borderRadius:"50%"},[`${buttonCls}${skeletonButtonCls}-round`]:{borderRadius:size}}},genSkeletonElementButtonSize=(size,calc)=>Object.assign({width:calc(size).mul(2).equal(),minWidth:calc(size).mul(2).equal()},genSkeletonElementCommonSize(size)),genSkeletonElementButton=token=>{const{borderRadiusSM,skeletonButtonCls,controlHeight,controlHeightLG,controlHeightSM,gradientFromColor,calc}=token;return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({[skeletonButtonCls]:Object.assign({display:"inline-block",verticalAlign:"top",background:gradientFromColor,borderRadius:borderRadiusSM,width:calc(controlHeight).mul(2).equal(),minWidth:calc(controlHeight).mul(2).equal()},genSkeletonElementButtonSize(controlHeight,calc))},genSkeletonElementButtonShape(token,controlHeight,skeletonButtonCls)),{[`${skeletonButtonCls}-lg`]:Object.assign({},genSkeletonElementButtonSize(controlHeightLG,calc))}),genSkeletonElementButtonShape(token,controlHeightLG,`${skeletonButtonCls}-lg`)),{[`${skeletonButtonCls}-sm`]:Object.assign({},genSkeletonElementButtonSize(controlHeightSM,calc))}),genSkeletonElementButtonShape(token,controlHeightSM,`${skeletonButtonCls}-sm`))},genBaseStyle=token=>{const{componentCls,skeletonAvatarCls,skeletonTitleCls,skeletonParagraphCls,skeletonButtonCls,skeletonInputCls,skeletonImageCls,controlHeight,controlHeightLG,controlHeightSM,gradientFromColor,padding,marginSM,borderRadius,titleHeight,blockRadius,paragraphLiHeight,controlHeightXS,paragraphMarginTop}=token;return{[componentCls]:{display:"table",width:"100%",[`${componentCls}-header`]:{display:"table-cell",paddingInlineEnd:padding,verticalAlign:"top",[skeletonAvatarCls]:Object.assign({display:"inline-block",verticalAlign:"top",background:gradientFromColor},genSkeletonElementAvatarSize(controlHeight)),[`${skeletonAvatarCls}-circle`]:{borderRadius:"50%"},[`${skeletonAvatarCls}-lg`]:Object.assign({},genSkeletonElementAvatarSize(controlHeightLG)),[`${skeletonAvatarCls}-sm`]:Object.assign({},genSkeletonElementAvatarSize(controlHeightSM))},[`${componentCls}-content`]:{display:"table-cell",width:"100%",verticalAlign:"top",[skeletonTitleCls]:{width:"100%",height:titleHeight,background:gradientFromColor,borderRadius:blockRadius,[`+ ${skeletonParagraphCls}`]:{marginBlockStart:controlHeightSM}},[skeletonParagraphCls]:{padding:0,"> li":{width:"100%",height:paragraphLiHeight,listStyle:"none",background:gradientFromColor,borderRadius:blockRadius,"+ li":{marginBlockStart:controlHeightXS}}},[`${skeletonParagraphCls}> li:last-child:not(:first-child):not(:nth-child(2))`]:{width:"61%"}},[`&-round ${componentCls}-content`]:{[`${skeletonTitleCls}, ${skeletonParagraphCls} > li`]:{borderRadius}}},[`${componentCls}-with-avatar ${componentCls}-content`]:{[skeletonTitleCls]:{marginBlockStart:marginSM,[`+ ${skeletonParagraphCls}`]:{marginBlockStart:paragraphMarginTop}}},[`${componentCls}${componentCls}-element`]:Object.assign(Object.assign(Object.assign(Object.assign({display:"inline-block",width:"auto"},genSkeletonElementButton(token)),genSkeletonElementAvatar(token)),genSkeletonElementInput(token)),genSkeletonElementImage(token)),[`${componentCls}${componentCls}-block`]:{width:"100%",[skeletonButtonCls]:{width:"100%"},[skeletonInputCls]:{width:"100%"}},[`${componentCls}${componentCls}-active`]:{[`\n        ${skeletonTitleCls},\n        ${skeletonParagraphCls} > li,\n        ${skeletonAvatarCls},\n        ${skeletonButtonCls},\n        ${skeletonInputCls},\n        ${skeletonImageCls}\n      `]:Object.assign({},genSkeletonColor(token))}}},skeleton_style=(0,genStyleUtils.OF)("Skeleton",(token=>{const{componentCls,calc}=token,skeletonToken=(0,cssinjs_utils_es.oX)(token,{skeletonAvatarCls:`${componentCls}-avatar`,skeletonTitleCls:`${componentCls}-title`,skeletonParagraphCls:`${componentCls}-paragraph`,skeletonButtonCls:`${componentCls}-button`,skeletonInputCls:`${componentCls}-input`,skeletonImageCls:`${componentCls}-image`,imageSizeBase:calc(token.controlHeight).mul(1.5).equal(),borderRadius:100,skeletonLoadingBackground:`linear-gradient(90deg, ${token.gradientFromColor} 25%, ${token.gradientToColor} 37%, ${token.gradientFromColor} 63%)`,skeletonLoadingMotionDuration:"1.4s"});return[genBaseStyle(skeletonToken)]}),(token=>{const{colorFillContent,colorFill}=token;return{color:colorFillContent,colorGradientEnd:colorFill,gradientFromColor:colorFillContent,gradientToColor:colorFill,titleHeight:token.controlHeight/2,blockRadius:token.borderRadiusSM,paragraphMarginTop:token.marginLG+token.marginXXS,paragraphLiHeight:token.controlHeight/2}}),{deprecatedTokens:[["color","gradientFromColor"],["colorGradientEnd","gradientToColor"]]}),Avatar=props=>{const{prefixCls:customizePrefixCls,className,rootClassName,active,shape="circle",size="default"}=props,{getPrefixCls}=react.useContext(context.QO),prefixCls=getPrefixCls("skeleton",customizePrefixCls),[wrapCSSVar,hashId,cssVarCls]=skeleton_style(prefixCls),otherProps=(0,omit.A)(props,["prefixCls","className"]),cls=classnames_default()(prefixCls,`${prefixCls}-element`,{[`${prefixCls}-active`]:active},className,rootClassName,hashId,cssVarCls);return wrapCSSVar(react.createElement("div",{className:cls},react.createElement(skeleton_Element,Object.assign({prefixCls:`${prefixCls}-avatar`,shape,size},otherProps))))},Image=props=>{const{prefixCls:customizePrefixCls,className,rootClassName,style,active}=props,{getPrefixCls}=react.useContext(context.QO),prefixCls=getPrefixCls("skeleton",customizePrefixCls),[wrapCSSVar,hashId,cssVarCls]=skeleton_style(prefixCls),cls=classnames_default()(prefixCls,`${prefixCls}-element`,{[`${prefixCls}-active`]:active},className,rootClassName,hashId,cssVarCls);return wrapCSSVar(react.createElement("div",{className:cls},react.createElement("div",{className:classnames_default()(`${prefixCls}-image`,className),style},react.createElement("svg",{viewBox:"0 0 1098 1024",xmlns:"http://www.w3.org/2000/svg",className:`${prefixCls}-image-svg`},react.createElement("title",null,"Image placeholder"),react.createElement("path",{d:"M365.714286 329.142857q0 45.714286-32.036571 77.677714t-77.677714 32.036571-77.677714-32.036571-32.036571-77.677714 32.036571-77.677714 77.677714-32.036571 77.677714 32.036571 32.036571 77.677714zM950.857143 548.571429l0 256-804.571429 0 0-109.714286 182.857143-182.857143 91.428571 91.428571 292.571429-292.571429zM1005.714286 146.285714l-914.285714 0q-7.460571 0-12.873143 5.412571t-5.412571 12.873143l0 694.857143q0 7.460571 5.412571 12.873143t12.873143 5.412571l914.285714 0q7.460571 0 12.873143-5.412571t5.412571-12.873143l0-694.857143q0-7.460571-5.412571-12.873143t-12.873143-5.412571zM1097.142857 164.571429l0 694.857143q0 37.741714-26.843429 64.585143t-64.585143 26.843429l-914.285714 0q-37.741714 0-64.585143-26.843429t-26.843429-64.585143l0-694.857143q0-37.741714 26.843429-64.585143t64.585143-26.843429l914.285714 0q37.741714 0 64.585143 26.843429t26.843429 64.585143z",className:`${prefixCls}-image-path`})))))},Input=props=>{const{prefixCls:customizePrefixCls,className,rootClassName,active,block,size="default"}=props,{getPrefixCls}=react.useContext(context.QO),prefixCls=getPrefixCls("skeleton",customizePrefixCls),[wrapCSSVar,hashId,cssVarCls]=skeleton_style(prefixCls),otherProps=(0,omit.A)(props,["prefixCls"]),cls=classnames_default()(prefixCls,`${prefixCls}-element`,{[`${prefixCls}-active`]:active,[`${prefixCls}-block`]:block},className,rootClassName,hashId,cssVarCls);return wrapCSSVar(react.createElement("div",{className:cls},react.createElement(skeleton_Element,Object.assign({prefixCls:`${prefixCls}-input`,size},otherProps))))},Node=props=>{const{prefixCls:customizePrefixCls,className,rootClassName,style,active,children}=props,{getPrefixCls}=react.useContext(context.QO),prefixCls=getPrefixCls("skeleton",customizePrefixCls),[wrapCSSVar,hashId,cssVarCls]=skeleton_style(prefixCls),cls=classnames_default()(prefixCls,`${prefixCls}-element`,{[`${prefixCls}-active`]:active},hashId,className,rootClassName,cssVarCls);return wrapCSSVar(react.createElement("div",{className:cls},react.createElement("div",{className:classnames_default()(`${prefixCls}-image`,className),style},children)))},getWidth=(index,props)=>{const{width,rows=2}=props;return Array.isArray(width)?width[index]:rows-1===index?width:void 0},skeleton_Paragraph=props=>{const{prefixCls,className,style,rows=0}=props,rowList=Array.from({length:rows}).map(((_,index)=>react.createElement("li",{key:index,style:{width:getWidth(index,props)}})));return react.createElement("ul",{className:classnames_default()(prefixCls,className),style},rowList)},skeleton_Title=_ref=>{let{prefixCls,className,width,style}=_ref;return react.createElement("h3",{className:classnames_default()(prefixCls,className),style:Object.assign({width},style)})};function getComponentProps(prop){return prop&&"object"==typeof prop?prop:{}}const Skeleton=props=>{const{prefixCls:customizePrefixCls,loading,className,rootClassName,style,children,avatar=!1,title=!0,paragraph=!0,active,round}=props,{getPrefixCls,direction,className:contextClassName,style:contextStyle}=(0,context.TP)("skeleton"),prefixCls=getPrefixCls("skeleton",customizePrefixCls),[wrapCSSVar,hashId,cssVarCls]=skeleton_style(prefixCls);if(loading||!("loading"in props)){const hasAvatar=!!avatar,hasTitle=!!title,hasParagraph=!!paragraph;let avatarNode,contentNode;if(hasAvatar){const avatarProps=Object.assign(Object.assign({prefixCls:`${prefixCls}-avatar`},function getAvatarBasicProps(hasTitle,hasParagraph){return hasTitle&&!hasParagraph?{size:"large",shape:"square"}:{size:"large",shape:"circle"}}(hasTitle,hasParagraph)),getComponentProps(avatar));avatarNode=react.createElement("div",{className:`${prefixCls}-header`},react.createElement(skeleton_Element,Object.assign({},avatarProps)))}if(hasTitle||hasParagraph){let $title,paragraphNode;if(hasTitle){const titleProps=Object.assign(Object.assign({prefixCls:`${prefixCls}-title`},function getTitleBasicProps(hasAvatar,hasParagraph){return!hasAvatar&&hasParagraph?{width:"38%"}:hasAvatar&&hasParagraph?{width:"50%"}:{}}(hasAvatar,hasParagraph)),getComponentProps(title));$title=react.createElement(skeleton_Title,Object.assign({},titleProps))}if(hasParagraph){const paragraphProps=Object.assign(Object.assign({prefixCls:`${prefixCls}-paragraph`},function getParagraphBasicProps(hasAvatar,hasTitle){const basicProps={};return hasAvatar&&hasTitle||(basicProps.width="61%"),basicProps.rows=!hasAvatar&&hasTitle?3:2,basicProps}(hasAvatar,hasTitle)),getComponentProps(paragraph));paragraphNode=react.createElement(skeleton_Paragraph,Object.assign({},paragraphProps))}contentNode=react.createElement("div",{className:`${prefixCls}-content`},$title,paragraphNode)}const cls=classnames_default()(prefixCls,{[`${prefixCls}-with-avatar`]:hasAvatar,[`${prefixCls}-active`]:active,[`${prefixCls}-rtl`]:"rtl"===direction,[`${prefixCls}-round`]:round},contextClassName,className,rootClassName,hashId,cssVarCls);return wrapCSSVar(react.createElement("div",{className:cls,style:Object.assign(Object.assign({},contextStyle),style)},avatarNode,contentNode))}return null!=children?children:null};Skeleton.Button=props=>{const{prefixCls:customizePrefixCls,className,rootClassName,active,block=!1,size="default"}=props,{getPrefixCls}=react.useContext(context.QO),prefixCls=getPrefixCls("skeleton",customizePrefixCls),[wrapCSSVar,hashId,cssVarCls]=skeleton_style(prefixCls),otherProps=(0,omit.A)(props,["prefixCls"]),cls=classnames_default()(prefixCls,`${prefixCls}-element`,{[`${prefixCls}-active`]:active,[`${prefixCls}-block`]:block},className,rootClassName,hashId,cssVarCls);return wrapCSSVar(react.createElement("div",{className:cls},react.createElement(skeleton_Element,Object.assign({prefixCls:`${prefixCls}-button`,size},otherProps))))},Skeleton.Avatar=Avatar,Skeleton.Input=Input,Skeleton.Image=Image,Skeleton.Node=Node;const skeleton=Skeleton}}]);