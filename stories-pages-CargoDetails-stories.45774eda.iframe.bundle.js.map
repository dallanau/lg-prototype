{"version":3,"file":"stories-pages-CargoDetails-stories.45774eda.iframe.bundle.js","mappings":";;;;;;AAcA;AACA;;;;;;AAQA;;;AAGA;;AAIA;;;;AAIA;;AAEA;;;AAKA;;;;AAIA;;;AAGA;;;AAKA;;;;;;AAMA;;;AAKA;;;;AAIA;;;;;;AAMA;AChEA;;;AAkDA;;;;;;AAvCA;AACA;;;;;;AAQA;;;AAGA;;AAIA;;;;AAIA;;;;;AAKA;;;;;;;AAOA;;;;;;;AAOA;;AAIA;;AAEA;AAGA;;;;AAIA;AACA;;;;;AAKA;;;;AAIA;;AAIA;;;AAGA;AACA;AACA;;;;AAIA;AACA;;;AAGA;;;;;AAOA;AACA;;;;;;;;;;;AAWA;;AAIA;AACA;;;AAGA;;AAEA;;AAIA;;;;;;;;;AASA;AAGA;AACA;AACA;AACA;;;AAKA;AACA;AACA;;;;;AAOA;;AAEA;;AAEA;;;;;;AAMA;;AAEA;;;;AC/IA","sources":["webpack://lg-prototype/./src/components/layout/GlobalHeader.tsx","webpack://lg-prototype/./src/pages/CargoDetails.tsx","webpack://lg-prototype/"],"sourcesContent":["import React from 'react';\nimport { Typography, Button } from 'antd';\nimport { LeftOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { colors, spacing } from '../../styles/theme';\n\nconst { Title } = Typography;\n\nconst HeaderContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 100;\n  background: ${colors.background.default};\n`;\n\nconst StatusBar = styled.div`\n  height: 24px;\n  background: #333333;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 ${spacing.md};\n  font-size: 12px;\n  color: white;\n`;\n\nconst Header = styled.div`\n  height: 52px;\n  padding: ${spacing.sm} ${spacing.md};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${colors.border.light};\n  background: white;\n`;\n\nconst LeftSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.sm};\n\n  .back-button {\n    font-size: 20px;\n    color: ${colors.text.primary};\n    cursor: pointer;\n  }\n`;\n\nconst CenterSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.sm};\n\n  .logo {\n    height: 24px;\n    width: auto;\n  }\n`;\n\nconst RightSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${spacing.sm};\n\n  .language-select {\n    font-size: 14px;\n    color: ${colors.text.primary};\n    cursor: pointer;\n    border: none;\n    background: none;\n    padding: 0;\n  }\n`;\n\ninterface GlobalHeaderProps {\n  title?: string;\n  onBack?: () => void;\n}\n\nconst GlobalHeader: React.FC<GlobalHeaderProps> = ({ title, onBack }) => {\n  return (\n    <HeaderContainer>\n      <StatusBar>\n        <span>12:09</span>\n        <div style={{ display: 'flex', gap: '4px', alignItems: 'center' }}>\n          <span>􀙇</span>\n          <span>􀙈</span>\n          <span>24%</span>\n        </div>\n      </StatusBar>\n      <Header>\n        <LeftSection>\n          {onBack && <LeftOutlined className=\"back-button\" onClick={onBack} />}\n        </LeftSection>\n        <CenterSection>\n          <img src=\"/logo.svg\" alt=\"Logo\" className=\"logo\" />\n        </CenterSection>\n        <RightSection>\n          <button className=\"language-select\">中 (簡)</button>\n        </RightSection>\n      </Header>\n    </HeaderContainer>\n  );\n};\n\nexport default GlobalHeader; ","import React, { useState } from 'react';\nimport { Layout, Radio, Select, Input, Checkbox, Button, Typography } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { colors, spacing, borderRadius, shadows } from '../styles/theme';\nimport GlobalHeader from '../components/layout/GlobalHeader';\n\nconst { Title } = Typography;\n\nconst StyledLayout = styled(Layout)`\n  background: ${colors.background.default};\n  min-height: 100vh;\n  width: 100%;\n`;\n\nconst HeaderContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 100;\n  background: ${colors.background.default};\n`;\n\nconst StatusBar = styled.div`\n  height: 24px;\n  background: #333333;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 ${spacing.md};\n  font-size: 12px;\n  color: white;\n`;\n\nconst Header = styled.div`\n  height: 52px;\n  padding: ${spacing.sm} ${spacing.md};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${colors.border.light};\n  background: white;\n\n  .back-button {\n    font-size: 20px;\n    color: ${colors.text.primary};\n    cursor: pointer;\n  }\n\n  .title {\n    font-size: 16px;\n    font-weight: 500;\n    color: ${colors.text.primary};\n    margin: 0;\n  }\n\n  .right-space {\n    width: 20px;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  margin-top: 76px;\n  padding: ${spacing.md};\n  padding-bottom: 120px;\n`;\n\nconst FormGroup = styled.div<{ noMargin?: boolean }>`\n  margin-bottom: ${props => props.noMargin ? '0' : spacing.lg};\n\n  .label {\n    font-size: 14px;\n    color: ${colors.text.primary};\n    margin-bottom: ${spacing.sm};\n    display: flex;\n    align-items: center;\n\n    .required {\n      color: ${colors.status.error};\n      margin-right: 4px;\n    }\n  }\n`;\n\nconst StyledRadioGroup = styled(Radio.Group)`\n  display: flex;\n  gap: ${spacing.sm};\n\n  .ant-radio-wrapper {\n    border: 1px solid ${colors.border.light};\n    padding: ${spacing.sm} ${spacing.md};\n    border-radius: ${borderRadius.medium};\n    margin-right: 0;\n\n    &-checked {\n      border-color: ${colors.primary};\n      background: ${colors.background.blue};\n    }\n  }\n`;\n\nconst StyledSelect = styled(Select)`\n  width: 100%;\n\n  .ant-select-selector {\n    height: 44px !important;\n    padding: ${spacing.sm} ${spacing.md} !important;\n    border-radius: ${borderRadius.medium} !important;\n\n    .ant-select-selection-search-input {\n      height: 42px !important;\n    }\n\n    .ant-select-selection-placeholder,\n    .ant-select-selection-item {\n      line-height: 28px !important;\n    }\n  }\n`;\n\nconst StyledInput = styled(Input)`\n  height: 44px;\n  border-radius: ${borderRadius.medium};\n  padding: ${spacing.sm} ${spacing.md};\n\n  &::placeholder {\n    color: ${colors.text.light};\n  }\n`;\n\nconst CurrencyInput = styled.div`\n  display: flex;\n  gap: ${spacing.sm};\n\n  .currency-select {\n    width: 100px;\n  }\n\n  .value-input {\n    flex: 1;\n  }\n`;\n\nconst AddressSection = styled.div`\n  margin-top: ${spacing.xl};\n  padding-top: ${spacing.lg};\n  border-top: 1px solid ${colors.border.light};\n`;\n\nconst AddButton = styled(Button)`\n  width: 100%;\n  height: 44px;\n  margin-top: ${spacing.md};\n  border-radius: ${borderRadius.medium};\n`;\n\nconst BottomButtons = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: ${spacing.md};\n  background: white;\n  box-shadow: ${shadows.medium};\n  display: flex;\n  gap: ${spacing.md};\n\n  .ant-btn {\n    flex: 1;\n    height: 44px;\n    font-size: 16px;\n    border-radius: ${borderRadius.medium};\n  }\n`;\n\ninterface CargoDetailsProps {\n  onBack?: () => void;\n  onNext?: (values: any) => void;\n}\n\nconst CargoDetails: React.FC<CargoDetailsProps> = ({ onBack, onNext }) => {\n  const [containerType, setContainerType] = useState<'whole' | 'part'>('whole');\n  const [cargoType, setCargoType] = useState<string>();\n  const [cargoWeight, setCargoWeight] = useState<string>();\n  const [cargoDimensions, setCargoDimensions] = useState<string>();\n  const [totalQuantity, setTotalQuantity] = useState<string>();\n  const [totalValue, setTotalValue] = useState<string>();\n  const [currency, setCurrency] = useState<string>('AUD');\n  const [needsWarehouse, setNeedsWarehouse] = useState<boolean>(false);\n  const [warehouseAddress, setWarehouseAddress] = useState<string>();\n  const [contactName, setContactName] = useState<string>();\n  const [contactPhone, setContactPhone] = useState<string>();\n  const [phonePrefix, setPhonePrefix] = useState<string>('+86');\n\n  const handleNext = () => {\n    onNext?.({\n      containerType,\n      cargoType,\n      cargoWeight,\n      cargoDimensions,\n      totalQuantity,\n      totalValue,\n      currency,\n      needsWarehouse,\n      warehouseAddress,\n      contactName,\n      contactPhone,\n      phonePrefix,\n    });\n  };\n\n  return (\n    <StyledLayout>\n      <GlobalHeader title=\"新增委托\" onBack={onBack} />\n\n      <ContentContainer>\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>整柜/拼柜</span>\n          </div>\n          <StyledRadioGroup \n            value={containerType}\n            onChange={e => setContainerType(e.target.value)}\n          >\n            <Radio value=\"whole\">整柜</Radio>\n            <Radio value=\"part\">拼柜</Radio>\n          </StyledRadioGroup>\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>柜型选择</span>\n          </div>\n          <StyledSelect\n            value={cargoType}\n            onChange={(value) => setCargoType(value as string)}\n            placeholder=\"请选择\"\n          >\n            <Select.Option value=\"type1\">20尺标准柜</Select.Option>\n            <Select.Option value=\"type2\">40尺标准柜</Select.Option>\n            <Select.Option value=\"type3\">40尺高柜</Select.Option>\n          </StyledSelect>\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>货物类型</span>\n          </div>\n          <StyledSelect\n            value={cargoType}\n            onChange={(value) => setCargoType(value as string)}\n            placeholder=\"请选择\"\n          >\n            <Select.Option value=\"type1\">普通货物</Select.Option>\n            <Select.Option value=\"type2\">危险品</Select.Option>\n            <Select.Option value=\"type3\">冷藏货物</Select.Option>\n          </StyledSelect>\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>货物总重量(kg)</span>\n          </div>\n          <StyledInput\n            value={cargoWeight}\n            onChange={e => setCargoWeight(e.target.value)}\n            placeholder=\"货物总重量\"\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">\n            <span className=\"required\">*</span>\n            <span>货物总尺寸(cbm)</span>\n          </div>\n          <StyledInput\n            value={cargoDimensions}\n            onChange={e => setCargoDimensions(e.target.value)}\n            placeholder=\"货物总尺寸\"\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">总箱数</div>\n          <StyledInput\n            value={totalQuantity}\n            onChange={e => setTotalQuantity(e.target.value)}\n            placeholder=\"总箱数\"\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <div className=\"label\">总货值</div>\n          <CurrencyInput>\n            <StyledSelect\n              className=\"currency-select\"\n              value={currency}\n              onChange={(value) => setCurrency(value as string)}\n            >\n              <Select.Option value=\"AUD\">AUD</Select.Option>\n              <Select.Option value=\"USD\">USD</Select.Option>\n              <Select.Option value=\"CNY\">CNY</Select.Option>\n            </StyledSelect>\n            <StyledInput\n              className=\"value-input\"\n              value={totalValue}\n              onChange={e => setTotalValue(e.target.value)}\n              placeholder=\"总货值\"\n            />\n          </CurrencyInput>\n        </FormGroup>\n\n        <FormGroup noMargin>\n          <Checkbox\n            checked={needsWarehouse}\n            onChange={e => setNeedsWarehouse(e.target.checked)}\n          >\n            上门装柜(可选填)\n          </Checkbox>\n        </FormGroup>\n\n        {needsWarehouse && (\n          <AddressSection>\n            <FormGroup>\n              <div className=\"label\">\n                <span className=\"required\">*</span>\n                <span>装柜地址</span>\n              </div>\n              <StyledInput\n                value={warehouseAddress}\n                onChange={e => setWarehouseAddress(e.target.value)}\n                placeholder=\"装柜地址\"\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <div className=\"label\">\n                <span className=\"required\">*</span>\n                <span>联系人</span>\n              </div>\n              <StyledInput\n                value={contactName}\n                onChange={e => setContactName(e.target.value)}\n                placeholder=\"联系人姓名\"\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <div className=\"label\">\n                <span className=\"required\">*</span>\n                <span>联系人电话</span>\n              </div>\n              <CurrencyInput>\n                <StyledSelect\n                  className=\"currency-select\"\n                  value={phonePrefix}\n                  onChange={(value) => setPhonePrefix(value as string)}\n                >\n                  <Select.Option value=\"+86\">+86</Select.Option>\n                  <Select.Option value=\"+61\">+61</Select.Option>\n                </StyledSelect>\n                <StyledInput\n                  className=\"value-input\"\n                  value={contactPhone}\n                  onChange={e => setContactPhone(e.target.value)}\n                  placeholder=\"电话\"\n                />\n              </CurrencyInput>\n            </FormGroup>\n\n            <AddButton icon={<PlusOutlined />}>\n              添加装柜\n            </AddButton>\n          </AddressSection>\n        )}\n      </ContentContainer>\n\n      <BottomButtons>\n        <Button onClick={onBack}>上一步</Button>\n        <Button type=\"primary\" onClick={handleNext}>下一步</Button>\n      </BottomButtons>\n    </StyledLayout>\n  );\n};\n\nexport default CargoDetails; "],"names":[],"sourceRoot":""}